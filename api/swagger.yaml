openapi: 3.0.1
info:
  title: Finazon API
  description: |-
    ## API reference

    Finazon is a comprehensive financial data marketplace that enables developers to effortlessly integrate a wide variety of global datasets, including stocks, ETFs, cryptocurrencies, and more, all with fully customizable parameters.

    The Finazon API is built around [REST](https://en.wikipedia.org/wiki/Representational_state_transfer) principles, featuring resource-oriented URLs with predictable behavior. The API accepts [form-encoded](https://en.wikipedia.org/wiki/POST_(HTTP)#Use_for_submitting_web_forms) request bodies, returns JSON-encoded responses, and utilizes standard HTTP response codes, authentication methods, and verbs.

    The Finazon API doesn't support bulk updates. You can work on only one instrument per request.

    ## Authentification

    To authenticate requests, the Finazon API requires [API keys](https://finazon.io/account/developers/api-keys). You can obtain, view, and manage your API keys through the [Finazon Dashboard](https://finazon.io/account/home).

    Your API keys hold significant privileges, so ensure their security by not sharing your secret API keys in publicly accessible areas, such as GitHub repositories, client-side code, or any other public platforms.

    All API requests must be made over [HTTPS](http://en.wikipedia.org/wiki/HTTP_Secure). Calls over plain HTTP will fail, as will API requests without authentication.

    Once you have your API key, include it in the parameters as follows:

    ```bash
    https://api.finazon.io/latest?apikey=YOUR_API_KEY
    ```

    Alternatively, pass it as a request header:

    ```bash
    Authorization: apikey YOUR_API_KEY
    ```

    ## Versioning

    Whenever [backwards-incompatible](https://support.finazon.io/en/articles/7792859-api-upgrades#h_1e014217bf) changes are introduced to the API, a new dated version is released. Consult our [API upgrades guide](https://support.finazon.io/en/articles/7792859-api-upgrades) for more information on backwards compatibility, and view our API changelog for all API updates.

    To always use the most up-to-date version, specify it as `/latest`:

    ```bash
    https://api.finazon.io/latest
    ```

    To access the most recent version of `v1.*`, use the following:

    ```bash
    https://api.finazon.io/v1

    ```

    Or, to retrieve a specific version, call:

    ```bash

    https://api.finazon.io/v1.0
    ```

    Finazon will provide advance notice before deprecating older API versions, giving developers ample time to migrate to the updated version.

    ## Endpoints structure

    The Finazon API adheres to a consistent and structured pattern for its endpoints. The base URL for all requests is:

    ```bash
    https://api.finazon.io/
    ```

    API endpoints are organized by resource types, including universal resources accessible across all publishers and publisher-specific resources. For example, the `/time_series`
    endpoint is compatible with all publishers that support this data format. Such responses will be standardized across all datasets, facilitating rapid integration of new markets into your applications.

    ```bash
    https://api.finazon.io/latest/{{resource}}
    https://api.finazon.io/latest/time_series
    ```

    Additionally, datasets may contain unique data exclusive to that dataset. In such cases, you might want to call a separate endpoint specifying the publisher to gather more data. For instance, the [Binance](https://finazon.io/dataset/binance) dataset time series can be requested as:

    ```bash

    https://api.finazon.io/latest/{{publisher}}/{{resource}}
    https://api.finazon.io/latest/binance/time_series
    ```

    ## Parameters

    Each API request has its own set of required and optional parameters. Parameters should be separated by an ampersand. Parameter names are case-sensitive, while parameter values are not. Each API request has its own set of required and optional parameters. Parameters should be separated by an ampersand. Parameter names and parameter values are case-sensitive

    ```bash
    https://api.finazon.io/latest/time_series?dataset=sip_non_pro&ticker=AAPL&interval=1m&apikey=
    ```

    ### Pagination

    All API resources supporting bulk fetches are retrieved via "list" API methods. For example, you can list time series, list trades, and list quotes. These list API methods share a common structure, accepting at least these five parameters: `page`, `page_size`, `order`, `start_at`, and `end_at`.

    The response of a list API method represents a single page in a reverse chronological stream of objects. If you do not specify `start_at` or `end_at`, you will receive the first page of this list, containing the newest objects. By default, you will receive 10 objects if you do not specify an alternative value for `page_size`. You can specify `start_at` equal to the T (timestamp) value of an item to retrieve the page of older objects occurring immediately after the specified timestamp in the reverse chronological stream. Similarly, you can specify `end_at` to receive a page of newer objects occurring immediately before the named object in the stream. You can use one of `start_at` or `end_at` or both. Objects in a page always appear in reverse chronological order, unless `order` is specified.

    ## Errors

    Finazon employs standard HTTP response codes to signify the success or failure of an API request. Generally, the response codes can be interpreted as follows:

    `2xx` range codes indicate a successful request.

    `4xx` range codes signify an error resulting from the provided information (e.g., invalid API key, API rate limit exceeded, etc.).

    `5xx` range codes represent errors originating from Finazon's servers (these are rare occurrences).

    For all `4xx`errors that can be addressed programmatically (e.g., endpoint not found), an error message is included to succinctly explain the reported issue. This allows developers to quickly identify and resolve errors in their API requests.

     status | code | message |
    --------|:-----|:--------|
     400 |  INVALID_PARAMETER | The **{parameter_name}** parameter is missing or invalid. |
     400 |  INVALID_DATE_RANGE | The requested date range is invalid or unsupported. |
     400 |  UNSUPPORTED_MARKET | The requested market or exchange is not supported by the API. Please check the supported markets and try again. |
     400 |  INVALID_TICKER | The provided ticker is invalid or unsupported. |
     401 |  UNAUTHORIZED_ACCESS | You are not authorized to access the requested endpoint or you have insufficient permissions. |
     404 |  ENDPOINT_NOT_FOUND | The requested endpoint **{endpoint_name}** does not exist or could not be found. |
     429 |  API_RATE_LIMIT_EXCEEDED | You have exceeded the allowed number of API calls within the minute. Please wait and try again later. |
     401 |  INVALID_API_KEY | The provided API key is invalid or has expired. Please check your API key and try again |
     408 |  REQUEST_TIMEOUT | The request took too long to complete and timed out. Please try again later or reduce the complexity of your query. |
     503 |  DATA_UNAVAILABLE | The requested data is temporarily unavailable or not supported. Please try again later or check the availability of the data. |
     500 |  INTERNAL_SERVER_ERROR | An error occurred on the server-side while processing the request. Please try again later. If the issue persists, contact support. |
  version: v1.2
servers:
- url: https://api.finazon.io/v1.2/
security:
- api_key: []
paths:
  /api_usage:
    get:
      tags:
      - Reference
      summary: Api usage
      description: Returns a list of datasets with available API calls and limits.
      operationId: GetApiUsage
      parameters:
      - name: product
        in: query
        description: Product code
        required: false
        style: form
        explode: true
        schema:
          type: string
          x-go-name: Product
        x-go-name: Product
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiUsageResponseBody'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiUsageResponseBody'
      security:
      - api_key: []
      x-beta: "false"
      x-group: Personal
  /benzinga/dividends_calendar:
    get:
      tags:
      - Data
      summary: Dividends calendar
      description: Returns the dividends calendar from Benzinga.
      operationId: GetBenzingaDividendsCalendar
      parameters:
      - name: ticker
        in: query
        description: Filter by ticker symbol
        required: true
        style: form
        explode: true
        schema:
          type: string
          x-go-name: Ticker
          x-order: "10"
        x-go-name: Ticker
        x-order: "10"
      - name: date
        in: query
        description: Specifies the exact date to get the data for
        required: false
        style: form
        explode: true
        schema:
          type: string
          x-go-name: Date
        x-go-name: Date
      - name: start_at
        in: query
        description: Filter events by start time using a UNIX timestamp
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int64
          x-go-name: StartAt
        x-go-name: StartAt
      - name: end_at
        in: query
        description: Filter events by end time using a UNIX timestamp
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int64
          x-go-name: EndAt
        x-go-name: EndAt
      - name: page
        in: query
        description: Specific page of a paginated result to be displayed
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
          default: 0
          x-go-name: Page
        x-go-name: Page
      - name: page_size
        in: query
        description: Number of items displayed per page in a paginated result
        required: false
        style: form
        explode: true
        schema:
          maximum: 100
          type: integer
          format: int32
          default: 100
          x-go-name: PageSize
        x-go-name: PageSize
      - name: order
        in: query
        description: Sorting order of the output series
        required: false
        style: form
        explode: true
        schema:
          type: string
          default: desc
          enum:
          - desc
          - asc
          x-go-name: Order
          x-order: "20"
        x-go-name: Order
        x-order: "20"
      - name: cqs
        in: query
        description: Filter by cqs symbol
        required: false
        style: form
        explode: true
        schema:
          type: string
          x-go-name: Cqs
          x-order: '"5000"'
        x-go-name: Cqs
        x-order: '"5000"'
      - name: cik
        in: query
        description: Filter by cik code
        required: false
        style: form
        explode: true
        schema:
          type: string
          x-go-name: Cik
          x-order: '"5010"'
        x-go-name: Cik
        x-order: '"5010"'
      - name: cusip
        in: query
        description: Filter by cusip code
        required: false
        style: form
        explode: true
        schema:
          type: string
          x-go-name: Cusip
          x-order: '"5020"'
        x-go-name: Cusip
        x-order: '"5020"'
      - name: isin
        in: query
        description: Filter by isin code
        required: false
        style: form
        explode: true
        schema:
          type: string
          x-go-name: Isin
          x-order: '"5030"'
        x-go-name: Isin
        x-order: '"5030"'
      - name: composite_figi
        in: query
        description: Filter by composite figi code
        required: false
        style: form
        explode: true
        schema:
          type: string
          x-go-name: CompositeFigi
          x-order: '"5040"'
        x-go-name: CompositeFigi
        x-order: '"5040"'
      - name: share_figi
        in: query
        description: Filter by share class figi code
        required: false
        style: form
        explode: true
        schema:
          type: string
          x-go-name: ShareFigi
          x-order: '"5050"'
        x-go-name: ShareFigi
        x-order: '"5050"'
      - name: lei
        in: query
        description: Filter by lei code
        required: false
        style: form
        explode: true
        schema:
          type: string
          x-go-name: Lei
          x-order: '"5060"'
        x-go-name: Lei
        x-order: '"5060"'
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BenzingaDividendsCalendarResponseBody'
            application/xml:
              schema:
                $ref: '#/components/schemas/BenzingaDividendsCalendarResponseBody'
      security:
      - api_key: []
      x-group: Dataset specific/Benzinga
      x-order: "10"
      x-short-url: "true"
  /benzinga/earnings_calendar:
    get:
      tags:
      - Data
      summary: Earnings calendar
      description: Returns the earnings calendar from Benzinga.
      operationId: GetBenzingaEarningsCalendar
      parameters:
      - name: ticker
        in: query
        description: Filter by ticker symbol
        required: true
        style: form
        explode: true
        schema:
          type: string
          x-go-name: Ticker
          x-order: "10"
        x-go-name: Ticker
        x-order: "10"
      - name: date
        in: query
        description: Specifies the exact date to get the data for
        required: false
        style: form
        explode: true
        schema:
          type: string
          x-go-name: Date
        x-go-name: Date
      - name: start_at
        in: query
        description: Filter events by start time using a UNIX timestamp
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int64
          x-go-name: StartAt
        x-go-name: StartAt
      - name: end_at
        in: query
        description: Filter events by end time using a UNIX timestamp
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int64
          x-go-name: EndAt
        x-go-name: EndAt
      - name: page
        in: query
        description: Specific page of a paginated result to be displayed
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
          default: 0
          x-go-name: Page
        x-go-name: Page
      - name: page_size
        in: query
        description: Number of items displayed per page in a paginated result
        required: false
        style: form
        explode: true
        schema:
          maximum: 100
          type: integer
          format: int32
          default: 100
          x-go-name: PageSize
        x-go-name: PageSize
      - name: order
        in: query
        description: Sorting order of the output series
        required: false
        style: form
        explode: true
        schema:
          type: string
          default: desc
          enum:
          - desc
          - asc
          x-go-name: Order
          x-order: "20"
        x-go-name: Order
        x-order: "20"
      - name: cqs
        in: query
        description: Filter by cqs symbol
        required: false
        style: form
        explode: true
        schema:
          type: string
          x-go-name: Cqs
          x-order: '"5000"'
        x-go-name: Cqs
        x-order: '"5000"'
      - name: cik
        in: query
        description: Filter by cik code
        required: false
        style: form
        explode: true
        schema:
          type: string
          x-go-name: Cik
          x-order: '"5010"'
        x-go-name: Cik
        x-order: '"5010"'
      - name: cusip
        in: query
        description: Filter by cusip code
        required: false
        style: form
        explode: true
        schema:
          type: string
          x-go-name: Cusip
          x-order: '"5020"'
        x-go-name: Cusip
        x-order: '"5020"'
      - name: isin
        in: query
        description: Filter by isin code
        required: false
        style: form
        explode: true
        schema:
          type: string
          x-go-name: Isin
          x-order: '"5030"'
        x-go-name: Isin
        x-order: '"5030"'
      - name: composite_figi
        in: query
        description: Filter by composite figi code
        required: false
        style: form
        explode: true
        schema:
          type: string
          x-go-name: CompositeFigi
          x-order: '"5040"'
        x-go-name: CompositeFigi
        x-order: '"5040"'
      - name: share_figi
        in: query
        description: Filter by share class figi code
        required: false
        style: form
        explode: true
        schema:
          type: string
          x-go-name: ShareFigi
          x-order: '"5050"'
        x-go-name: ShareFigi
        x-order: '"5050"'
      - name: lei
        in: query
        description: Filter by lei code
        required: false
        style: form
        explode: true
        schema:
          type: string
          x-go-name: Lei
          x-order: '"5060"'
        x-go-name: Lei
        x-order: '"5060"'
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BenzingaEarningsCalendarResponseBody'
            application/xml:
              schema:
                $ref: '#/components/schemas/BenzingaEarningsCalendarResponseBody'
      security:
      - api_key: []
      x-group: Dataset specific/Benzinga
      x-order: "20"
      x-short-url: "true"
  /benzinga/ipo:
    get:
      tags:
      - Data
      summary: IPO data
      description: Returns IPO data from Benzinga.
      operationId: GetBenzingaIPO
      parameters:
      - name: start_at
        in: query
        description: Filter events by start time using a UNIX timestamp
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int64
          x-go-name: StartAt
          x-order: "10"
        x-go-name: StartAt
        x-order: "10"
      - name: end_at
        in: query
        description: Filter events by end time using a UNIX timestamp
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int64
          x-go-name: EndAt
          x-order: "20"
        x-go-name: EndAt
        x-order: "20"
      - name: page
        in: query
        description: Specific page of a paginated result to be displayed
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
          default: 0
          x-go-name: Page
        x-go-name: Page
      - name: page_size
        in: query
        description: Number of items displayed per page in a paginated result
        required: false
        style: form
        explode: true
        schema:
          maximum: 100
          type: integer
          format: int32
          default: 100
          x-go-name: PageSize
        x-go-name: PageSize
      - name: order
        in: query
        description: Sorting order of the output series
        required: false
        style: form
        explode: true
        schema:
          type: string
          default: asc
          enum:
          - desc
          - asc
          x-go-name: Order
          x-order: "40"
        x-go-name: Order
        x-order: "40"
      - name: exchange
        in: query
        description: Exchange where instrument is traded
        required: false
        style: form
        explode: true
        schema:
          type: string
          x-go-name: Exchange
          x-order: "30"
        x-go-name: Exchange
        x-order: "30"
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BenzingaIPOResponseBody'
            application/xml:
              schema:
                $ref: '#/components/schemas/BenzingaIPOResponseBody'
      security:
      - api_key: []
      x-group: Dataset specific/Benzinga
      x-order: "30"
      x-short-url: "true"
  /benzinga/news:
    get:
      tags:
      - Data
      summary: News articles
      description: Returns the news articles from Benzinga.
      operationId: GetBenzingaNews
      parameters:
      - name: ticker
        in: query
        description: Filter by ticker symbol
        required: true
        style: form
        explode: true
        schema:
          type: string
          x-go-name: Ticker
          x-order: "10"
        x-go-name: Ticker
        x-order: "10"
      - name: date
        in: query
        description: Specifies the exact date to get the data for
        required: false
        style: form
        explode: true
        schema:
          type: string
          x-go-name: Date
        x-go-name: Date
      - name: start_at
        in: query
        description: Filter events by start time using a UNIX timestamp
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int64
          x-go-name: StartAt
        x-go-name: StartAt
      - name: end_at
        in: query
        description: Filter events by end time using a UNIX timestamp
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int64
          x-go-name: EndAt
        x-go-name: EndAt
      - name: page
        in: query
        description: Specific page of a paginated result to be displayed
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
          default: 0
          x-go-name: Page
        x-go-name: Page
      - name: page_size
        in: query
        description: Number of items displayed per page in a paginated result
        required: false
        style: form
        explode: true
        schema:
          maximum: 100
          type: integer
          format: int32
          default: 100
          x-go-name: PageSize
        x-go-name: PageSize
      - name: order
        in: query
        description: Sorting order of the output series
        required: false
        style: form
        explode: true
        schema:
          type: string
          default: desc
          enum:
          - desc
          - asc
          x-go-name: Order
          x-order: "20"
        x-go-name: Order
        x-order: "20"
      - name: cqs
        in: query
        description: Filter by cqs symbol
        required: false
        style: form
        explode: true
        schema:
          type: string
          x-go-name: Cqs
          x-order: '"5000"'
        x-go-name: Cqs
        x-order: '"5000"'
      - name: cik
        in: query
        description: Filter by cik code
        required: false
        style: form
        explode: true
        schema:
          type: string
          x-go-name: Cik
          x-order: '"5010"'
        x-go-name: Cik
        x-order: '"5010"'
      - name: cusip
        in: query
        description: Filter by cusip code
        required: false
        style: form
        explode: true
        schema:
          type: string
          x-go-name: Cusip
          x-order: '"5020"'
        x-go-name: Cusip
        x-order: '"5020"'
      - name: isin
        in: query
        description: Filter by isin code
        required: false
        style: form
        explode: true
        schema:
          type: string
          x-go-name: Isin
          x-order: '"5030"'
        x-go-name: Isin
        x-order: '"5030"'
      - name: composite_figi
        in: query
        description: Filter by composite figi code
        required: false
        style: form
        explode: true
        schema:
          type: string
          x-go-name: CompositeFigi
          x-order: '"5040"'
        x-go-name: CompositeFigi
        x-order: '"5040"'
      - name: share_figi
        in: query
        description: Filter by share class figi code
        required: false
        style: form
        explode: true
        schema:
          type: string
          x-go-name: ShareFigi
          x-order: '"5050"'
        x-go-name: ShareFigi
        x-order: '"5050"'
      - name: lei
        in: query
        description: Filter by lei code
        required: false
        style: form
        explode: true
        schema:
          type: string
          x-go-name: Lei
          x-order: '"5060"'
        x-go-name: Lei
        x-order: '"5060"'
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BenzingaNewsResponseBody'
            application/xml:
              schema:
                $ref: '#/components/schemas/BenzingaNewsResponseBody'
      security:
      - api_key: []
      x-group: Dataset specific/Benzinga
      x-order: "40"
      x-short-url: "true"
  /binance/price:
    get:
      tags:
      - Data
      summary: Price
      description: Returns price value for given binance ticker.
      operationId: GetPriceBinance
      parameters:
      - name: at
        in: query
        description: Filter by start time using a UNIX timestamp. If not specified
          - last price. Else - last price from 1min interval at the event_at <= at
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int64
          x-go-name: At
          x-order: '"150"'
        x-go-name: At
        x-order: '"150"'
      - name: ticker
        in: query
        description: Filter by ticker symbol
        required: false
        style: form
        explode: true
        schema:
          type: string
          x-go-name: Ticker
        x-go-name: Ticker
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PriceResponseBody'
            application/xml:
              schema:
                $ref: '#/components/schemas/PriceResponseBody'
      security:
      - api_key: []
      x-beta: "true"
      x-group: Dataset specific/Binance
      x-order: "20"
  /binance/time_series:
    get:
      tags:
      - Data
      summary: Time series
      description: This endpoint returns a time series of data points for any given
        ticker.
      operationId: GetBinanceQuotes
      parameters:
      - name: ticker
        in: query
        description: Filter by ticker symbol
        required: true
        style: form
        explode: true
        schema:
          type: string
          x-go-name: Ticker
          x-order: '"10"'
        x-go-name: Ticker
        x-order: '"10"'
      - name: interval
        in: query
        description: Interval between two consecutive points in time series
        required: true
        style: form
        explode: true
        schema:
          type: string
          enum:
          - 1m
          - 2m
          - 3m
          - 4m
          - 5m
          - 10m
          - 15m
          - 20m
          - 30m
          - 45m
          - 1h
          - 2h
          - 3h
          - 4h
          - 8h
          - 12h
          - 1d
          - 1w
          - 1mo
          - 2mo
          - 3mo
          - 4mo
          x-go-name: Interval
          x-order: '"20"'
        x-go-name: Interval
        x-order: '"20"'
      - name: start_at
        in: query
        description: Filter output by start time using a UNIX timestamp
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int64
          x-go-name: StartAt
        x-go-name: StartAt
      - name: end_at
        in: query
        description: Filter output by end time using a UNIX timestamp
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int64
          x-go-name: EndAt
        x-go-name: EndAt
      - name: page
        in: query
        description: Specific page of a paginated result to be displayed
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
          default: 0
          x-go-name: Page
        x-go-name: Page
      - name: page_size
        in: query
        description: Number of items displayed per page in a paginated result
        required: false
        style: form
        explode: true
        schema:
          maximum: 1000
          type: integer
          format: int32
          default: 30
          x-go-name: PageSize
        x-go-name: PageSize
      - name: order
        in: query
        description: Sorting order of the output series
        required: false
        style: form
        explode: true
        schema:
          type: string
          default: desc
          enum:
          - desc
          - asc
          x-go-name: Order
          x-order: '"30"'
        x-go-name: Order
        x-order: '"30"'
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/QuoteBinanceItem'
                x-content-type: application/json
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/QuoteBinanceItem'
      security:
      - api_key: []
      x-group: Dataset specific/Binance
      x-order: "10"
  /crypto/price:
    get:
      tags:
      - Data
      summary: Price
      description: Returns price value for given crypto ticker.
      operationId: GetPriceCrypto
      parameters:
      - name: at
        in: query
        description: Filter by start time using a UNIX timestamp. If not specified
          - last price. Else - last price from 1min interval at the event_at <= at
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int64
          x-go-name: At
          x-order: '"150"'
        x-go-name: At
        x-order: '"150"'
      - name: ticker
        in: query
        description: Filter by ticker symbol
        required: false
        style: form
        explode: true
        schema:
          type: string
          x-go-name: Ticker
        x-go-name: Ticker
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PriceResponseBody'
            application/xml:
              schema:
                $ref: '#/components/schemas/PriceResponseBody'
      security:
      - api_key: []
      x-beta: "true"
      x-group: Dataset specific/Crypto
      x-order: "20"
  /crypto/time_series:
    get:
      tags:
      - Data
      summary: Time series
      description: This endpoint returns a time series of data points for any given
        ticker.
      operationId: GetCryptoQuotes
      parameters:
      - name: interval
        in: query
        description: Interval between two consecutive points in time series
        required: true
        style: form
        explode: true
        schema:
          type: string
          enum:
          - 1m
          - 2m
          - 3m
          - 4m
          - 5m
          - 10m
          - 15m
          - 20m
          - 30m
          - 45m
          - 1h
          - 2h
          - 3h
          - 4h
          - 8h
          - 12h
          - 1d
          - 1w
          - 1mo
          - 2mo
          - 3mo
          - 4mo
          x-go-name: Interval
          x-order: "10"
        x-go-name: Interval
        x-order: "10"
      - name: start_at
        in: query
        description: Filter output by start time using a UNIX timestamp
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int64
          x-go-name: StartAt
        x-go-name: StartAt
      - name: end_at
        in: query
        description: Filter output by end time using a UNIX timestamp
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int64
          x-go-name: EndAt
        x-go-name: EndAt
      - name: page
        in: query
        description: Specific page of a paginated result to be displayed
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
          default: 0
          x-go-name: Page
        x-go-name: Page
      - name: page_size
        in: query
        description: Number of items displayed per page in a paginated result
        required: false
        style: form
        explode: true
        schema:
          maximum: 1000
          type: integer
          format: int32
          default: 30
          x-go-name: PageSize
        x-go-name: PageSize
      - name: order
        in: query
        description: Sorting order of the output series
        required: false
        style: form
        explode: true
        schema:
          type: string
          default: desc
          enum:
          - desc
          - asc
          x-go-name: Order
          x-order: "20"
        x-go-name: Order
        x-order: "20"
      - name: ticker
        in: query
        description: Filter by ticker symbol
        required: true
        style: form
        explode: true
        schema:
          type: string
          x-go-name: Ticker
          x-order: "0"
        x-go-name: Ticker
        x-order: "0"
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/QuoteItem'
                x-content-type: application/json
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/QuoteItem'
      security:
      - api_key: []
      x-group: Dataset specific/Crypto
      x-order: "10"
  /datasets:
    get:
      tags:
      - Reference
      summary: List of Finazon datasets
      description: Returns a list of all datasets available at Finazon.
      operationId: GetDatasets
      parameters:
      - name: code
        in: query
        description: Filter by Finazon's dataset code
        required: false
        style: form
        explode: true
        schema:
          type: string
          x-go-name: Code
        x-go-name: Code
      - name: page
        in: query
        description: Specific page of a paginated result to be displayed
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
          x-go-name: Page
        x-go-name: Page
      - name: page_size
        in: query
        description: Number of items displayed per page in a paginated result
        required: false
        style: form
        explode: true
        schema:
          maximum: 1000
          type: integer
          format: int32
          default: 1000
          x-go-name: PageSize
        x-go-name: PageSize
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DatasetsResponseBody'
            application/xml:
              schema:
                $ref: '#/components/schemas/DatasetsResponseBody'
      security:
      - api_key: []
      x-group: Reference data
      x-order: "10"
  /forex/price:
    get:
      tags:
      - Data
      summary: Forex price
      description: Returns price value for given forex ticker.
      operationId: GetPriceForex
      parameters:
      - name: at
        in: query
        description: Filter by start time using a UNIX timestamp. If not specified
          - last price. Else - last price from 1min interval at the event_at <= at
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int64
          x-go-name: At
          x-order: '"150"'
        x-go-name: At
        x-order: '"150"'
      - name: ticker
        in: query
        description: Filter by ticker symbol
        required: false
        style: form
        explode: true
        schema:
          type: string
          x-go-name: Ticker
        x-go-name: Ticker
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PriceResponseBody'
            application/xml:
              schema:
                $ref: '#/components/schemas/PriceResponseBody'
      security:
      - api_key: []
      x-beta: "true"
      x-group: Dataset specific/Forex
      x-order: "20"
  /forex/time_series:
    get:
      tags:
      - Data
      summary: Time series
      description: This endpoint returns a time series of data points for any given
        ticker.
      operationId: GetForexQuotes
      parameters:
      - name: interval
        in: query
        description: Interval between two consecutive points in time series
        required: true
        style: form
        explode: true
        schema:
          type: string
          enum:
          - 1m
          - 2m
          - 3m
          - 4m
          - 5m
          - 10m
          - 15m
          - 20m
          - 30m
          - 45m
          - 1h
          - 2h
          - 3h
          - 4h
          - 8h
          - 12h
          - 1d
          - 1w
          - 1mo
          - 2mo
          - 3mo
          - 4mo
          x-go-name: Interval
          x-order: "10"
        x-go-name: Interval
        x-order: "10"
      - name: start_at
        in: query
        description: Filter output by start time using a UNIX timestamp
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int64
          x-go-name: StartAt
        x-go-name: StartAt
      - name: end_at
        in: query
        description: Filter output by end time using a UNIX timestamp
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int64
          x-go-name: EndAt
        x-go-name: EndAt
      - name: page
        in: query
        description: Specific page of a paginated result to be displayed
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
          default: 0
          x-go-name: Page
        x-go-name: Page
      - name: page_size
        in: query
        description: Number of items displayed per page in a paginated result
        required: false
        style: form
        explode: true
        schema:
          maximum: 1000
          type: integer
          format: int32
          default: 30
          x-go-name: PageSize
        x-go-name: PageSize
      - name: order
        in: query
        description: Sorting order of the output series
        required: false
        style: form
        explode: true
        schema:
          type: string
          default: desc
          enum:
          - desc
          - asc
          x-go-name: Order
          x-order: "20"
        x-go-name: Order
        x-order: "20"
      - name: ticker
        in: query
        description: Filter by ticker symbol
        required: true
        style: form
        explode: true
        schema:
          type: string
          x-go-name: Ticker
          x-order: "0"
        x-go-name: Ticker
        x-order: "0"
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/QuoteForexItem'
                x-content-type: application/json
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/QuoteForexItem'
      security:
      - api_key: []
      x-group: Dataset specific/Forex
      x-order: "10"
  /markets/crypto:
    get:
      tags:
      - Reference
      summary: List of crypto markets
      description: Returns a list of supported crypto markets.
      operationId: GetExchangesCrypto
      parameters:
      - name: page
        in: query
        description: Specific page of a paginated result to be displayed
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
          x-go-name: Page
        x-go-name: Page
      - name: page_size
        in: query
        description: Number of items displayed per page in a paginated result
        required: false
        style: form
        explode: true
        schema:
          maximum: 1000
          type: integer
          format: int32
          default: 1000
          x-go-name: PageSize
        x-go-name: PageSize
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExchangesCryptoResponseBody'
            application/xml:
              schema:
                $ref: '#/components/schemas/ExchangesCryptoResponseBody'
      security:
      - api_key: []
      x-group: Reference data/Markets
      x-order: "10"
  /markets/stocks:
    get:
      tags:
      - Reference
      summary: List of stock markets
      description: Returns a list of supported stock markets.
      operationId: GetExchangesStocks
      parameters:
      - name: country
        in: query
        description: Filter by ISO 3166 alpha-2 code
        required: false
        style: form
        explode: true
        schema:
          type: string
          x-go-name: Country
        x-go-name: Country
      - name: name
        in: query
        description: Filter by market name
        required: false
        style: form
        explode: true
        schema:
          type: string
          x-go-name: Name
        x-go-name: Name
      - name: code
        in: query
        description: Filter by market identifier code (MIC) under ISO 10383 standard
        required: false
        style: form
        explode: true
        schema:
          type: string
          x-go-name: Code
        x-go-name: Code
      - name: page
        in: query
        description: Specific page of a paginated result to be displayed
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
          x-go-name: Page
        x-go-name: Page
      - name: page_size
        in: query
        description: Number of items displayed per page in a paginated result
        required: false
        style: form
        explode: true
        schema:
          maximum: 1000
          type: integer
          format: int32
          default: 1000
          x-go-name: PageSize
        x-go-name: PageSize
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExchangesStocksResponseBody'
            application/xml:
              schema:
                $ref: '#/components/schemas/ExchangesStocksResponseBody'
      security:
      - api_key: []
      x-group: Reference data/Markets
      x-order: "20"
  /my_datasets:
    get:
      summary: My Datasets
      description: Returns a list of datasets available for the workspace
      operationId: Reference
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DatasetsResponseBody'
            application/xml:
              schema:
                $ref: '#/components/schemas/DatasetsResponseBody'
      security:
      - api_key: []
      x-beta: "false"
      x-group: Personal
  /price:
    get:
      tags:
      - Data
      summary: Price
      description: Returns price value for given ticker.
      operationId: GetPriceCommon
      parameters:
      - name: at
        in: query
        description: Filter by start time using a UNIX timestamp. If not specified
          - last price. Else - last price from 1min interval at the event_at <= at
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int64
          x-go-name: At
          x-order: '"150"'
        x-go-name: At
        x-order: '"150"'
      - name: prepost
        in: query
        description: Indicates whether data should be included for extended hours
          of trading
        required: false
        style: form
        explode: true
        schema:
          type: boolean
          default: false
          x-go-name: Prepost
          x-order: '"1000"'
        x-go-name: Prepost
        x-order: '"1000"'
      - name: cqs
        in: query
        description: Filter by cqs symbol
        required: false
        style: form
        explode: true
        schema:
          type: string
          x-go-name: Cqs
          x-order: '"5000"'
        x-go-name: Cqs
        x-order: '"5000"'
      - name: cik
        in: query
        description: Filter by cik code
        required: false
        style: form
        explode: true
        schema:
          type: string
          x-go-name: Cik
          x-order: '"5010"'
        x-go-name: Cik
        x-order: '"5010"'
      - name: cusip
        in: query
        description: Filter by cusip code
        required: false
        style: form
        explode: true
        schema:
          type: string
          x-go-name: Cusip
          x-order: '"5020"'
        x-go-name: Cusip
        x-order: '"5020"'
      - name: isin
        in: query
        description: Filter by isin code
        required: false
        style: form
        explode: true
        schema:
          type: string
          x-go-name: Isin
          x-order: '"5030"'
        x-go-name: Isin
        x-order: '"5030"'
      - name: composite_figi
        in: query
        description: Filter by composite figi code
        required: false
        style: form
        explode: true
        schema:
          type: string
          x-go-name: CompositeFigi
          x-order: '"5040"'
        x-go-name: CompositeFigi
        x-order: '"5040"'
      - name: share_figi
        in: query
        description: Filter by share class figi code
        required: false
        style: form
        explode: true
        schema:
          type: string
          x-go-name: ShareFigi
          x-order: '"5050"'
        x-go-name: ShareFigi
        x-order: '"5050"'
      - name: lei
        in: query
        description: Filter by lei code
        required: false
        style: form
        explode: true
        schema:
          type: string
          x-go-name: Lei
          x-order: '"5060"'
        x-go-name: Lei
        x-order: '"5060"'
      - name: dataset
        in: query
        description: Filter by Finazon's dataset code
        required: true
        style: form
        explode: true
        schema:
          type: string
          x-go-name: Dataset
          x-order: '"10"'
        x-go-name: Dataset
        x-order: '"10"'
      - name: ticker
        in: query
        description: Filter by ticker symbol
        required: false
        style: form
        explode: true
        schema:
          type: string
          x-go-name: Ticker
          x-order: '"20"'
        x-go-name: Ticker
        x-order: '"20"'
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PriceResponseBody'
            application/xml:
              schema:
                $ref: '#/components/schemas/PriceResponseBody'
      security:
      - api_key: []
      x-beta: "true"
      x-group: Market data
      x-order: "40"
  /publishers:
    get:
      tags:
      - Reference
      summary: List of Finazon publishers
      description: Returns a list of all publishers available at Finazon.
      operationId: GetPublishers
      parameters:
      - name: code
        in: query
        description: Filter by Finazon's publisher code
        required: false
        style: form
        explode: true
        schema:
          type: string
          x-go-name: Code
        x-go-name: Code
      - name: page
        in: query
        description: Specific page of a paginated result to be displayed
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
          x-go-name: Page
        x-go-name: Page
      - name: page_size
        in: query
        description: Number of items displayed per page in a paginated result
        required: false
        style: form
        explode: true
        schema:
          maximum: 1000
          type: integer
          format: int32
          default: 1000
          x-go-name: PageSize
        x-go-name: PageSize
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PublishersResponseBody'
            application/xml:
              schema:
                $ref: '#/components/schemas/PublishersResponseBody'
      security:
      - api_key: []
      x-group: Reference data
      x-order: "20"
  /sec/archive:
    get:
      tags:
      - Data
      summary: Filings
      description: "Real-time and historical access to all forms, filings, and exhibits\
        \ directly from the SEC's EDGAR system."
      operationId: GetFilings
      parameters:
      - name: cik_code
        in: query
        description: Filter by Central Index Key
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int64
          x-go-name: Cik
        x-go-name: Cik
      - name: ticker
        in: query
        description: Filter by ticker
        required: false
        style: form
        explode: true
        schema:
          type: string
          x-go-name: Ticker
        x-go-name: Ticker
      - name: form_type
        in: query
        description: Filter by form types
        required: false
        style: form
        explode: true
        schema:
          type: string
          x-go-name: FormType
        x-go-name: FormType
      - name: filled_from_ts
        in: query
        description: Filter by filled time from
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int64
          x-go-name: FilledFromTs
        x-go-name: FilledFromTs
      - name: filled_to_ts
        in: query
        description: Filter by filled time to
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int64
          x-go-name: FilledToTs
        x-go-name: FilledToTs
      - name: page
        in: query
        description: Specific page of a paginated result to be displayed
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
          default: 0
          x-go-name: Page
        x-go-name: Page
      - name: page_size
        in: query
        description: Number of items displayed per page in a paginated result
        required: false
        style: form
        explode: true
        schema:
          maximum: 100
          type: integer
          format: int32
          default: 10
          x-go-name: PageSize
        x-go-name: PageSize
      - name: cqs
        in: query
        description: Filter by cqs symbol
        required: false
        style: form
        explode: true
        schema:
          type: string
          x-go-name: Cqs
          x-order: '"5000"'
        x-go-name: Cqs
        x-order: '"5000"'
      - name: cusip
        in: query
        description: Filter by cusip code
        required: false
        style: form
        explode: true
        schema:
          type: string
          x-go-name: Cusip
          x-order: '"5020"'
        x-go-name: Cusip
        x-order: '"5020"'
      - name: isin
        in: query
        description: Filter by isin code
        required: false
        style: form
        explode: true
        schema:
          type: string
          x-go-name: Isin
          x-order: '"5030"'
        x-go-name: Isin
        x-order: '"5030"'
      - name: composite_figi
        in: query
        description: Filter by composite figi code
        required: false
        style: form
        explode: true
        schema:
          type: string
          x-go-name: CompositeFigi
          x-order: '"5040"'
        x-go-name: CompositeFigi
        x-order: '"5040"'
      - name: share_figi
        in: query
        description: Filter by share class figi code
        required: false
        style: form
        explode: true
        schema:
          type: string
          x-go-name: ShareFigi
          x-order: '"5050"'
        x-go-name: ShareFigi
        x-order: '"5050"'
      - name: lei
        in: query
        description: Filter by lei code
        required: false
        style: form
        explode: true
        schema:
          type: string
          x-go-name: Lei
          x-order: '"5060"'
        x-go-name: Lei
        x-order: '"5060"'
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Filing'
                x-content-type: application/json
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Filing'
      security:
      - api_key: []
      x-group: Dataset specific/SEC
  /sip/market_center:
    get:
      tags:
      - Reference
      summary: List of market centers
      description: Returns a list of market centers.
      operationId: GetMarketCenter
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MarketCenterResponseBody'
            application/xml:
              schema:
                $ref: '#/components/schemas/MarketCenterResponseBody'
      security:
      - api_key: []
      x-group: Dataset specific/SIP
      x-order: "10"
  /sip/trades:
    get:
      tags:
      - Data
      summary: SIP trades
      description: Returns detailed information on trades executed through the Securities
        Information Processor (SIP).
      operationId: GetSipTrades
      parameters:
      - name: cqs
        in: query
        description: Filter by cqs symbol
        required: false
        style: form
        explode: true
        schema:
          type: string
          x-go-name: Cqs
          x-order: '"5000"'
        x-go-name: Cqs
        x-order: '"5000"'
      - name: cik
        in: query
        description: Filter by cik code
        required: false
        style: form
        explode: true
        schema:
          type: string
          x-go-name: Cik
          x-order: '"5010"'
        x-go-name: Cik
        x-order: '"5010"'
      - name: cusip
        in: query
        description: Filter by cusip code
        required: false
        style: form
        explode: true
        schema:
          type: string
          x-go-name: Cusip
          x-order: '"5020"'
        x-go-name: Cusip
        x-order: '"5020"'
      - name: isin
        in: query
        description: Filter by isin code
        required: false
        style: form
        explode: true
        schema:
          type: string
          x-go-name: Isin
          x-order: '"5030"'
        x-go-name: Isin
        x-order: '"5030"'
      - name: composite_figi
        in: query
        description: Filter by composite figi code
        required: false
        style: form
        explode: true
        schema:
          type: string
          x-go-name: CompositeFigi
          x-order: '"5040"'
        x-go-name: CompositeFigi
        x-order: '"5040"'
      - name: share_figi
        in: query
        description: Filter by share class figi code
        required: false
        style: form
        explode: true
        schema:
          type: string
          x-go-name: ShareFigi
          x-order: '"5050"'
        x-go-name: ShareFigi
        x-order: '"5050"'
      - name: lei
        in: query
        description: Filter by lei code
        required: false
        style: form
        explode: true
        schema:
          type: string
          x-go-name: Lei
          x-order: '"5060"'
        x-go-name: Lei
        x-order: '"5060"'
      - name: ticker
        in: query
        description: Filter by ticker symbol
        required: true
        style: form
        explode: true
        schema:
          type: string
          x-go-name: Ticker
          x-order: '"10"'
        x-go-name: Ticker
        x-order: '"10"'
      - name: market
        in: query
        description: Filter by market center
        required: false
        style: form
        explode: true
        schema:
          type: string
          x-go-name: Market
        x-go-name: Market
      - name: start_at
        in: query
        description: Filter trades by start time using a UNIX timestamp
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int64
          x-go-name: StartAt
        x-go-name: StartAt
      - name: end_at
        in: query
        description: Filter trades by end time using a UNIX timestamp
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int64
          x-go-name: EndAt
        x-go-name: EndAt
      - name: tape
        in: query
        description: Filter by tape
        required: false
        style: form
        explode: true
        schema:
          type: string
          enum:
          - CQT-CTA-A-V2
          - CQT-CTA-B-V2
          - CQT-UTPBIN-V2
          x-go-name: Tape
        x-go-name: Tape
      - name: page
        in: query
        description: Specific page of a paginated result to be displayed
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int64
          default: 0
          x-go-name: Page
        x-go-name: Page
      - name: page_size
        in: query
        description: Number of items displayed per page in a paginated result
        required: false
        style: form
        explode: true
        schema:
          maximum: 100
          type: integer
          format: int64
          default: 10
          x-go-name: PageSize
        x-go-name: PageSize
      - name: order
        in: query
        description: Sorting order of the output series
        required: false
        style: form
        explode: true
        schema:
          type: string
          default: DESC
          enum:
          - DESC
          - ASC
          x-go-name: Order
          x-order: '"20"'
        x-go-name: Order
        x-order: '"20"'
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SipTradesItem'
                x-content-type: application/json
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SipTradesItem'
      security:
      - api_key: []
      x-group: Dataset specific/SIP
      x-order: "20"
  /sip_non_pro/price:
    get:
      tags:
      - Data
      summary: Price
      description: Returns price value for given ticker.
      operationId: GetPriceSip
      parameters:
      - name: at
        in: query
        description: Filter by start time using a UNIX timestamp. If not specified
          - last price. Else - last price from 1min interval at the event_at <= at
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int64
          x-go-name: At
          x-order: '"150"'
        x-go-name: At
        x-order: '"150"'
      - name: prepost
        in: query
        description: Indicates whether data should be included for extended hours
          of trading
        required: false
        style: form
        explode: true
        schema:
          type: boolean
          default: false
          x-go-name: Prepost
          x-order: '"1000"'
        x-go-name: Prepost
        x-order: '"1000"'
      - name: cqs
        in: query
        description: Filter by cqs symbol
        required: false
        style: form
        explode: true
        schema:
          type: string
          x-go-name: Cqs
          x-order: '"5000"'
        x-go-name: Cqs
        x-order: '"5000"'
      - name: cik
        in: query
        description: Filter by cik code
        required: false
        style: form
        explode: true
        schema:
          type: string
          x-go-name: Cik
          x-order: '"5010"'
        x-go-name: Cik
        x-order: '"5010"'
      - name: cusip
        in: query
        description: Filter by cusip code
        required: false
        style: form
        explode: true
        schema:
          type: string
          x-go-name: Cusip
          x-order: '"5020"'
        x-go-name: Cusip
        x-order: '"5020"'
      - name: isin
        in: query
        description: Filter by isin code
        required: false
        style: form
        explode: true
        schema:
          type: string
          x-go-name: Isin
          x-order: '"5030"'
        x-go-name: Isin
        x-order: '"5030"'
      - name: composite_figi
        in: query
        description: Filter by composite figi code
        required: false
        style: form
        explode: true
        schema:
          type: string
          x-go-name: CompositeFigi
          x-order: '"5040"'
        x-go-name: CompositeFigi
        x-order: '"5040"'
      - name: share_figi
        in: query
        description: Filter by share class figi code
        required: false
        style: form
        explode: true
        schema:
          type: string
          x-go-name: ShareFigi
          x-order: '"5050"'
        x-go-name: ShareFigi
        x-order: '"5050"'
      - name: lei
        in: query
        description: Filter by lei code
        required: false
        style: form
        explode: true
        schema:
          type: string
          x-go-name: Lei
          x-order: '"5060"'
        x-go-name: Lei
        x-order: '"5060"'
      - name: ticker
        in: query
        description: Filter by ticker symbol
        required: false
        style: form
        explode: true
        schema:
          type: string
          x-go-name: Ticker
        x-go-name: Ticker
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PriceResponseBody'
            application/xml:
              schema:
                $ref: '#/components/schemas/PriceResponseBody'
      security:
      - api_key: []
      x-beta: "true"
      x-group: _hidden
      x-order: "50"
  /sip_pro/price:
    get:
      tags:
      - Data
      summary: Price
      description: Returns price value for given ticker.
      operationId: GetPriceSip
      parameters:
      - name: at
        in: query
        description: Filter by start time using a UNIX timestamp. If not specified
          - last price. Else - last price from 1min interval at the event_at <= at
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int64
          x-go-name: At
          x-order: '"150"'
        x-go-name: At
        x-order: '"150"'
      - name: prepost
        in: query
        description: Indicates whether data should be included for extended hours
          of trading
        required: false
        style: form
        explode: true
        schema:
          type: boolean
          default: false
          x-go-name: Prepost
          x-order: '"1000"'
        x-go-name: Prepost
        x-order: '"1000"'
      - name: cqs
        in: query
        description: Filter by cqs symbol
        required: false
        style: form
        explode: true
        schema:
          type: string
          x-go-name: Cqs
          x-order: '"5000"'
        x-go-name: Cqs
        x-order: '"5000"'
      - name: cik
        in: query
        description: Filter by cik code
        required: false
        style: form
        explode: true
        schema:
          type: string
          x-go-name: Cik
          x-order: '"5010"'
        x-go-name: Cik
        x-order: '"5010"'
      - name: cusip
        in: query
        description: Filter by cusip code
        required: false
        style: form
        explode: true
        schema:
          type: string
          x-go-name: Cusip
          x-order: '"5020"'
        x-go-name: Cusip
        x-order: '"5020"'
      - name: isin
        in: query
        description: Filter by isin code
        required: false
        style: form
        explode: true
        schema:
          type: string
          x-go-name: Isin
          x-order: '"5030"'
        x-go-name: Isin
        x-order: '"5030"'
      - name: composite_figi
        in: query
        description: Filter by composite figi code
        required: false
        style: form
        explode: true
        schema:
          type: string
          x-go-name: CompositeFigi
          x-order: '"5040"'
        x-go-name: CompositeFigi
        x-order: '"5040"'
      - name: share_figi
        in: query
        description: Filter by share class figi code
        required: false
        style: form
        explode: true
        schema:
          type: string
          x-go-name: ShareFigi
          x-order: '"5050"'
        x-go-name: ShareFigi
        x-order: '"5050"'
      - name: lei
        in: query
        description: Filter by lei code
        required: false
        style: form
        explode: true
        schema:
          type: string
          x-go-name: Lei
          x-order: '"5060"'
        x-go-name: Lei
        x-order: '"5060"'
      - name: ticker
        in: query
        description: Filter by ticker symbol
        required: false
        style: form
        explode: true
        schema:
          type: string
          x-go-name: Ticker
        x-go-name: Ticker
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PriceResponseBody'
            application/xml:
              schema:
                $ref: '#/components/schemas/PriceResponseBody'
      security:
      - api_key: []
      x-beta: "true"
      x-group: _hidden
      x-order: "50"
  /ticker/snapshot:
    get:
      tags:
      - Data
      summary: Ticker snapshot
      description: "This endpoint returns a combination of different data points,\
        \ such as daily performance, last quote, last trade, minute data, and previous\
        \ day performance."
      operationId: GetTickerSnapshot
      parameters:
      - name: cqs
        in: query
        description: Filter by cqs symbol
        required: false
        style: form
        explode: true
        schema:
          type: string
          x-go-name: Cqs
          x-order: '"5000"'
        x-go-name: Cqs
        x-order: '"5000"'
      - name: cik
        in: query
        description: Filter by cik code
        required: false
        style: form
        explode: true
        schema:
          type: string
          x-go-name: Cik
          x-order: '"5010"'
        x-go-name: Cik
        x-order: '"5010"'
      - name: cusip
        in: query
        description: Filter by cusip code
        required: false
        style: form
        explode: true
        schema:
          type: string
          x-go-name: Cusip
          x-order: '"5020"'
        x-go-name: Cusip
        x-order: '"5020"'
      - name: isin
        in: query
        description: Filter by isin code
        required: false
        style: form
        explode: true
        schema:
          type: string
          x-go-name: Isin
          x-order: '"5030"'
        x-go-name: Isin
        x-order: '"5030"'
      - name: composite_figi
        in: query
        description: Filter by composite figi code
        required: false
        style: form
        explode: true
        schema:
          type: string
          x-go-name: CompositeFigi
          x-order: '"5040"'
        x-go-name: CompositeFigi
        x-order: '"5040"'
      - name: share_figi
        in: query
        description: Filter by share class figi code
        required: false
        style: form
        explode: true
        schema:
          type: string
          x-go-name: ShareFigi
          x-order: '"5050"'
        x-go-name: ShareFigi
        x-order: '"5050"'
      - name: lei
        in: query
        description: Filter by lei code
        required: false
        style: form
        explode: true
        schema:
          type: string
          x-go-name: Lei
          x-order: '"5060"'
        x-go-name: Lei
        x-order: '"5060"'
      - name: dataset
        in: query
        description: Filter by Finazon's dataset code
        required: true
        style: form
        explode: true
        schema:
          type: string
          x-go-name: Dataset
        x-go-name: Dataset
      - name: ticker
        in: query
        description: Filter by ticker symbol
        required: true
        style: form
        explode: true
        schema:
          type: string
          x-go-name: Ticker
        x-go-name: Ticker
      - name: market
        in: query
        description: Filter by market
        required: false
        style: form
        explode: true
        schema:
          type: string
          x-go-name: Market
        x-go-name: Market
      - name: country
        in: query
        description: Filter by ISO 3166 alpha-2 code
        required: false
        style: form
        explode: true
        schema:
          type: string
          x-go-name: Country
        x-go-name: Country
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200'
            application/xml:
              schema:
                $ref: '#/components/schemas/inline_response_200'
      security:
      - api_key: []
      x-group: Market data
      x-order: "10"
  /tickers/crypto:
    get:
      tags:
      - Reference
      summary: List of crypto pairs
      description: Returns a list of cryptocurrency ticker symbols (pairs). This list
        is updated daily.
      operationId: GetSymbolsCrypto
      parameters:
      - name: dataset
        in: query
        description: Filter by Finazon's dataset code
        required: false
        style: form
        explode: true
        schema:
          type: string
          x-go-name: Dataset
        x-go-name: Dataset
      - name: ticker
        in: query
        description: Filter by ticker symbol
        required: false
        style: form
        explode: true
        schema:
          type: string
          x-go-name: Ticker
        x-go-name: Ticker
      - name: page
        in: query
        description: Specific page of a paginated result to be displayed
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
          x-go-name: Page
        x-go-name: Page
      - name: page_size
        in: query
        description: Number of items displayed per page in a paginated result
        required: false
        style: form
        explode: true
        schema:
          maximum: 1000
          type: integer
          format: int32
          default: 1000
          x-go-name: PageSize
        x-go-name: PageSize
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SymbolsCryptoResponseBody'
            application/xml:
              schema:
                $ref: '#/components/schemas/SymbolsCryptoResponseBody'
      security:
      - api_key: []
      x-group: Reference data/Tickers
      x-order: "10"
  /tickers/forex:
    get:
      tags:
      - Reference
      summary: List of forex ticker symbols
      description: Returns a list of forex ticker symbols (pairs). This list is updated
        daily.
      operationId: GetSymbolsForex
      parameters:
      - name: ticker
        in: query
        description: Filter by ticker symbol
        required: false
        style: form
        explode: true
        schema:
          type: string
          x-go-name: Ticker
        x-go-name: Ticker
      - name: page
        in: query
        description: Specific page of a paginated result to be displayed
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
          x-go-name: Page
        x-go-name: Page
      - name: page_size
        in: query
        description: Number of items displayed per page in a paginated result
        required: false
        style: form
        explode: true
        schema:
          maximum: 1000
          type: integer
          format: int32
          default: 1000
          x-go-name: PageSize
        x-go-name: PageSize
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SymbolsForexResponseBody'
            application/xml:
              schema:
                $ref: '#/components/schemas/SymbolsForexResponseBody'
      security:
      - api_key: []
      x-group: Reference data/Tickers
      x-order: "20"
  /tickers/stocks:
    get:
      tags:
      - Reference
      summary: List of stock ticker symbols
      description: Returns a list of stock ticker symbols. This list is updated daily.
      operationId: GetSymbolsStocks
      parameters:
      - name: cqs
        in: query
        description: Filter by cqs symbol
        required: false
        style: form
        explode: true
        schema:
          type: string
          x-go-name: Cqs
          x-order: '"5000"'
        x-go-name: Cqs
        x-order: '"5000"'
      - name: cik
        in: query
        description: Filter by cik code
        required: false
        style: form
        explode: true
        schema:
          type: string
          x-go-name: Cik
          x-order: '"5010"'
        x-go-name: Cik
        x-order: '"5010"'
      - name: cusip
        in: query
        description: Filter by cusip code
        required: false
        style: form
        explode: true
        schema:
          type: string
          x-go-name: Cusip
          x-order: '"5020"'
        x-go-name: Cusip
        x-order: '"5020"'
      - name: isin
        in: query
        description: Filter by isin code
        required: false
        style: form
        explode: true
        schema:
          type: string
          x-go-name: Isin
          x-order: '"5030"'
        x-go-name: Isin
        x-order: '"5030"'
      - name: composite_figi
        in: query
        description: Filter by composite figi code
        required: false
        style: form
        explode: true
        schema:
          type: string
          x-go-name: CompositeFigi
          x-order: '"5040"'
        x-go-name: CompositeFigi
        x-order: '"5040"'
      - name: share_figi
        in: query
        description: Filter by share class figi code
        required: false
        style: form
        explode: true
        schema:
          type: string
          x-go-name: ShareFigi
          x-order: '"5050"'
        x-go-name: ShareFigi
        x-order: '"5050"'
      - name: lei
        in: query
        description: Filter by lei code
        required: false
        style: form
        explode: true
        schema:
          type: string
          x-go-name: Lei
          x-order: '"5060"'
        x-go-name: Lei
        x-order: '"5060"'
      - name: dataset
        in: query
        description: Filter by Finazon's dataset code
        required: false
        style: form
        explode: true
        schema:
          type: string
          x-go-name: Dataset
        x-go-name: Dataset
      - name: ticker
        in: query
        description: Filter by ticker symbol
        required: false
        style: form
        explode: true
        schema:
          type: string
          x-go-name: Ticker
        x-go-name: Ticker
      - name: page
        in: query
        description: Specific page of a paginated result to be displayed
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
          x-go-name: Page
        x-go-name: Page
      - name: page_size
        in: query
        description: Number of items displayed per page in a paginated result
        required: false
        style: form
        explode: true
        schema:
          maximum: 1000
          type: integer
          format: int32
          default: 1000
          x-go-name: PageSize
        x-go-name: PageSize
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SymbolsStocksResponseBody'
            application/xml:
              schema:
                $ref: '#/components/schemas/SymbolsStocksResponseBody'
      security:
      - api_key: []
      x-group: Reference data/Tickers
      x-order: "30"
  /tickers/us_stocks:
    get:
      tags:
      - Reference
      summary: List of US stock ticker symbols
      description: Returns a list of US stock ticker symbols. This list is updated
        daily.
      operationId: GetSymbolsUSStocks
      parameters:
      - name: cqs
        in: query
        description: Filter by cqs symbol
        required: false
        style: form
        explode: true
        schema:
          type: string
          x-go-name: Cqs
          x-order: '"5000"'
        x-go-name: Cqs
        x-order: '"5000"'
      - name: cik
        in: query
        description: Filter by cik code
        required: false
        style: form
        explode: true
        schema:
          type: string
          x-go-name: Cik
          x-order: '"5010"'
        x-go-name: Cik
        x-order: '"5010"'
      - name: cusip
        in: query
        description: Filter by cusip code
        required: false
        style: form
        explode: true
        schema:
          type: string
          x-go-name: Cusip
          x-order: '"5020"'
        x-go-name: Cusip
        x-order: '"5020"'
      - name: isin
        in: query
        description: Filter by isin code
        required: false
        style: form
        explode: true
        schema:
          type: string
          x-go-name: Isin
          x-order: '"5030"'
        x-go-name: Isin
        x-order: '"5030"'
      - name: composite_figi
        in: query
        description: Filter by composite figi code
        required: false
        style: form
        explode: true
        schema:
          type: string
          x-go-name: CompositeFigi
          x-order: '"5040"'
        x-go-name: CompositeFigi
        x-order: '"5040"'
      - name: share_figi
        in: query
        description: Filter by share class figi code
        required: false
        style: form
        explode: true
        schema:
          type: string
          x-go-name: ShareFigi
          x-order: '"5050"'
        x-go-name: ShareFigi
        x-order: '"5050"'
      - name: lei
        in: query
        description: Filter by lei code
        required: false
        style: form
        explode: true
        schema:
          type: string
          x-go-name: Lei
          x-order: '"5060"'
        x-go-name: Lei
        x-order: '"5060"'
      - name: page
        in: query
        description: Specific page of a paginated result to be displayed
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
          x-go-name: Page
        x-go-name: Page
      - name: page_size
        in: query
        description: Number of items displayed per page in a paginated result
        required: false
        style: form
        explode: true
        schema:
          maximum: 1000
          type: integer
          format: int32
          default: 1000
          x-go-name: PageSize
        x-go-name: PageSize
      - name: ticker
        in: query
        description: Filter by ticker symbol
        required: false
        style: form
        explode: true
        schema:
          type: string
          x-go-name: Ticker
        x-go-name: Ticker
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SymbolsUSStocksResponseBody'
            application/xml:
              schema:
                $ref: '#/components/schemas/SymbolsUSStocksResponseBody'
      security:
      - api_key: []
      x-group: Reference data/Tickers
      x-order: "40"
  /time_series:
    get:
      tags:
      - Data
      summary: Time series
      description: This endpoint returns a time series of data points for any given
        ticker.
      operationId: GetQuotes
      parameters:
      - name: cqs
        in: query
        description: Filter by cqs symbol
        required: false
        style: form
        explode: true
        schema:
          type: string
          x-go-name: Cqs
          x-order: '"5000"'
        x-go-name: Cqs
        x-order: '"5000"'
      - name: cik
        in: query
        description: Filter by cik code
        required: false
        style: form
        explode: true
        schema:
          type: string
          x-go-name: Cik
          x-order: '"5010"'
        x-go-name: Cik
        x-order: '"5010"'
      - name: cusip
        in: query
        description: Filter by cusip code
        required: false
        style: form
        explode: true
        schema:
          type: string
          x-go-name: Cusip
          x-order: '"5020"'
        x-go-name: Cusip
        x-order: '"5020"'
      - name: isin
        in: query
        description: Filter by isin code
        required: false
        style: form
        explode: true
        schema:
          type: string
          x-go-name: Isin
          x-order: '"5030"'
        x-go-name: Isin
        x-order: '"5030"'
      - name: composite_figi
        in: query
        description: Filter by composite figi code
        required: false
        style: form
        explode: true
        schema:
          type: string
          x-go-name: CompositeFigi
          x-order: '"5040"'
        x-go-name: CompositeFigi
        x-order: '"5040"'
      - name: share_figi
        in: query
        description: Filter by share class figi code
        required: false
        style: form
        explode: true
        schema:
          type: string
          x-go-name: ShareFigi
          x-order: '"5050"'
        x-go-name: ShareFigi
        x-order: '"5050"'
      - name: lei
        in: query
        description: Filter by lei code
        required: false
        style: form
        explode: true
        schema:
          type: string
          x-go-name: Lei
          x-order: '"5060"'
        x-go-name: Lei
        x-order: '"5060"'
      - name: dataset
        in: query
        description: Filter by Finazon's dataset code
        required: true
        style: form
        explode: true
        schema:
          type: string
          x-go-name: Dataset
          x-order: '"10"'
        x-go-name: Dataset
        x-order: '"10"'
      - name: ticker
        in: query
        description: Filter by ticker symbol
        required: true
        style: form
        explode: true
        schema:
          type: string
          x-go-name: Ticker
          x-order: '"20"'
        x-go-name: Ticker
        x-order: '"20"'
      - name: interval
        in: query
        description: Interval between two consecutive points in time series
        required: true
        style: form
        explode: true
        schema:
          type: string
          enum:
          - 1m
          - 2m
          - 3m
          - 4m
          - 5m
          - 10m
          - 15m
          - 20m
          - 30m
          - 45m
          - 1h
          - 2h
          - 3h
          - 4h
          - 8h
          - 12h
          - 1d
          - 1w
          - 1mo
          - 2mo
          - 3mo
          - 4mo
          x-go-name: Interval
          x-order: '"30"'
        x-go-name: Interval
        x-order: '"30"'
      - name: market
        in: query
        description: Filter by market
        required: false
        style: form
        explode: true
        schema:
          type: string
          x-go-name: Market
        x-go-name: Market
      - name: country
        in: query
        description: Filter by ISO 3166 alpha-2 code
        required: false
        style: form
        explode: true
        schema:
          type: string
          x-go-name: Country
        x-go-name: Country
      - name: start_at
        in: query
        description: Filter output by start time using a UNIX timestamp
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int64
          x-go-name: StartAt
        x-go-name: StartAt
      - name: end_at
        in: query
        description: Filter output by end time using a UNIX timestamp
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int64
          x-go-name: EndAt
        x-go-name: EndAt
      - name: page
        in: query
        description: Specific page of a paginated result to be displayed
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
          default: 0
          x-go-name: Page
        x-go-name: Page
      - name: page_size
        in: query
        description: Number of items displayed per page in a paginated result
        required: false
        style: form
        explode: true
        schema:
          maximum: 1000
          type: integer
          format: int32
          default: 30
          x-go-name: PageSize
        x-go-name: PageSize
      - name: order
        in: query
        description: Sorting order of the output series
        required: false
        style: form
        explode: true
        schema:
          type: string
          default: desc
          enum:
          - desc
          - asc
          x-go-name: Order
          x-order: '"40"'
        x-go-name: Order
        x-order: '"40"'
      - name: prepost
        in: query
        description: Indicates whether data should be included for extended hours
          of trading
        required: false
        style: form
        explode: true
        schema:
          type: boolean
          default: false
          x-go-name: Prepost
        x-go-name: Prepost
      - name: adjust
        in: query
        description: "Apply adjusting for data (all, splits, dividends, none)"
        required: false
        style: form
        explode: true
        schema:
          type: string
          default: all
          x-go-name: Adjust
        x-go-name: Adjust
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/QuoteItem'
                x-content-type: application/json
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/QuoteItem'
      security:
      - api_key: []
      x-group: Market data
      x-order: "20"
  /time_series/atr:
    get:
      tags:
      - technical_indicator
      - Data
      summary: ATR Technical indicators
      description: "The Average True Range (ATR) is a volatility indicator that measures\
        \ the average range of price movement over a specified period, helping traders\
        \ assess market volatility."
      operationId: GetTechnicalIndicatorAtr
      parameters:
      - name: cqs
        in: query
        description: Filter by cqs symbol
        required: false
        style: form
        explode: true
        schema:
          type: string
          x-go-name: Cqs
          x-order: '"5000"'
        x-go-name: Cqs
        x-order: '"5000"'
      - name: cik
        in: query
        description: Filter by cik code
        required: false
        style: form
        explode: true
        schema:
          type: string
          x-go-name: Cik
          x-order: '"5010"'
        x-go-name: Cik
        x-order: '"5010"'
      - name: cusip
        in: query
        description: Filter by cusip code
        required: false
        style: form
        explode: true
        schema:
          type: string
          x-go-name: Cusip
          x-order: '"5020"'
        x-go-name: Cusip
        x-order: '"5020"'
      - name: isin
        in: query
        description: Filter by isin code
        required: false
        style: form
        explode: true
        schema:
          type: string
          x-go-name: Isin
          x-order: '"5030"'
        x-go-name: Isin
        x-order: '"5030"'
      - name: composite_figi
        in: query
        description: Filter by composite figi code
        required: false
        style: form
        explode: true
        schema:
          type: string
          x-go-name: CompositeFigi
          x-order: '"5040"'
        x-go-name: CompositeFigi
        x-order: '"5040"'
      - name: share_figi
        in: query
        description: Filter by share class figi code
        required: false
        style: form
        explode: true
        schema:
          type: string
          x-go-name: ShareFigi
          x-order: '"5050"'
        x-go-name: ShareFigi
        x-order: '"5050"'
      - name: lei
        in: query
        description: Filter by lei code
        required: false
        style: form
        explode: true
        schema:
          type: string
          x-go-name: Lei
          x-order: '"5060"'
        x-go-name: Lei
        x-order: '"5060"'
      - name: dataset
        in: query
        description: Filter by Finazon's dataset code
        required: true
        style: form
        explode: true
        schema:
          type: string
          x-go-name: Dataset
          x-order: '"10"'
        x-go-name: Dataset
        x-order: '"10"'
      - name: ticker
        in: query
        description: Filter by ticker symbol
        required: true
        style: form
        explode: true
        schema:
          type: string
          x-go-name: Ticker
          x-order: '"20"'
        x-go-name: Ticker
        x-order: '"20"'
      - name: interval
        in: query
        description: Interval between two consecutive points in time series
        required: true
        style: form
        explode: true
        schema:
          type: string
          enum:
          - 1m
          - 2m
          - 3m
          - 4m
          - 5m
          - 10m
          - 15m
          - 20m
          - 30m
          - 45m
          - 1h
          - 2h
          - 3h
          - 4h
          - 8h
          - 12h
          - 1d
          - 1w
          - 1mo
          - 2mo
          - 3mo
          - 4mo
          x-go-name: Interval
          x-order: '"30"'
        x-go-name: Interval
        x-order: '"30"'
      - name: market
        in: query
        description: Filter by market
        required: false
        style: form
        explode: true
        schema:
          type: string
          x-go-name: Market
        x-go-name: Market
      - name: country
        in: query
        description: Filter by ISO 3166 alpha-2 code
        required: false
        style: form
        explode: true
        schema:
          type: string
          x-go-name: Country
        x-go-name: Country
      - name: start_at
        in: query
        description: Filter output by start time using a UNIX timestamp
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int64
          x-go-name: StartAt
        x-go-name: StartAt
      - name: end_at
        in: query
        description: Filter output by end time using a UNIX timestamp
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int64
          x-go-name: EndAt
        x-go-name: EndAt
      - name: page
        in: query
        description: Specific page of a paginated result to be displayed
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
          default: 0
          x-go-name: Page
        x-go-name: Page
      - name: page_size
        in: query
        description: Number of items displayed per page in a paginated result
        required: false
        style: form
        explode: true
        schema:
          maximum: 1000
          type: integer
          format: int32
          default: 30
          x-go-name: PageSize
        x-go-name: PageSize
      - name: order
        in: query
        description: Sorting order of the output series
        required: false
        style: form
        explode: true
        schema:
          type: string
          default: desc
          enum:
          - desc
          - asc
          x-go-name: Order
          x-order: '"40"'
        x-go-name: Order
        x-order: '"40"'
      - name: prepost
        in: query
        description: Indicates whether data should be included for extended hours
          of trading
        required: false
        style: form
        explode: true
        schema:
          type: boolean
          default: false
          x-go-name: Prepost
        x-go-name: Prepost
      - name: adjust
        in: query
        description: "Apply adjusting for data (all, splits, dividends, none)"
        required: false
        style: form
        explode: true
        schema:
          type: string
          default: all
          x-go-name: Adjust
        x-go-name: Adjust
      - name: time_period
        in: query
        description: Number of periods to average over.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int64
          default: 14
          x-go-name: TimePeriod
        x-go-name: TimePeriod
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TechnicalIndicatorResponseAtr'
                x-content-type: application/json
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TechnicalIndicatorResponseAtr'
      security:
      - api_key: []
      x-group: Market data/Technical indicators
      x-order: "10"
  /time_series/bbands:
    get:
      tags:
      - technical_indicator
      - Data
      summary: Overlap Studies
      description: "Bollinger Bands (BBANDS) are volatility bands placed above and\
        \ below a moving average, measuring price volatility and helping traders identify\
        \ potential overbought or oversold conditions."
      operationId: GetTechnicalIndicatorBBands
      parameters:
      - name: cqs
        in: query
        description: Filter by cqs symbol
        required: false
        style: form
        explode: true
        schema:
          type: string
          x-go-name: Cqs
          x-order: '"5000"'
        x-go-name: Cqs
        x-order: '"5000"'
      - name: cik
        in: query
        description: Filter by cik code
        required: false
        style: form
        explode: true
        schema:
          type: string
          x-go-name: Cik
          x-order: '"5010"'
        x-go-name: Cik
        x-order: '"5010"'
      - name: cusip
        in: query
        description: Filter by cusip code
        required: false
        style: form
        explode: true
        schema:
          type: string
          x-go-name: Cusip
          x-order: '"5020"'
        x-go-name: Cusip
        x-order: '"5020"'
      - name: isin
        in: query
        description: Filter by isin code
        required: false
        style: form
        explode: true
        schema:
          type: string
          x-go-name: Isin
          x-order: '"5030"'
        x-go-name: Isin
        x-order: '"5030"'
      - name: composite_figi
        in: query
        description: Filter by composite figi code
        required: false
        style: form
        explode: true
        schema:
          type: string
          x-go-name: CompositeFigi
          x-order: '"5040"'
        x-go-name: CompositeFigi
        x-order: '"5040"'
      - name: share_figi
        in: query
        description: Filter by share class figi code
        required: false
        style: form
        explode: true
        schema:
          type: string
          x-go-name: ShareFigi
          x-order: '"5050"'
        x-go-name: ShareFigi
        x-order: '"5050"'
      - name: lei
        in: query
        description: Filter by lei code
        required: false
        style: form
        explode: true
        schema:
          type: string
          x-go-name: Lei
          x-order: '"5060"'
        x-go-name: Lei
        x-order: '"5060"'
      - name: dataset
        in: query
        description: Filter by Finazon's dataset code
        required: true
        style: form
        explode: true
        schema:
          type: string
          x-go-name: Dataset
          x-order: '"10"'
        x-go-name: Dataset
        x-order: '"10"'
      - name: ticker
        in: query
        description: Filter by ticker symbol
        required: true
        style: form
        explode: true
        schema:
          type: string
          x-go-name: Ticker
          x-order: '"20"'
        x-go-name: Ticker
        x-order: '"20"'
      - name: interval
        in: query
        description: Interval between two consecutive points in time series
        required: true
        style: form
        explode: true
        schema:
          type: string
          enum:
          - 1m
          - 2m
          - 3m
          - 4m
          - 5m
          - 10m
          - 15m
          - 20m
          - 30m
          - 45m
          - 1h
          - 2h
          - 3h
          - 4h
          - 8h
          - 12h
          - 1d
          - 1w
          - 1mo
          - 2mo
          - 3mo
          - 4mo
          x-go-name: Interval
          x-order: '"30"'
        x-go-name: Interval
        x-order: '"30"'
      - name: market
        in: query
        description: Filter by market
        required: false
        style: form
        explode: true
        schema:
          type: string
          x-go-name: Market
        x-go-name: Market
      - name: country
        in: query
        description: Filter by ISO 3166 alpha-2 code
        required: false
        style: form
        explode: true
        schema:
          type: string
          x-go-name: Country
        x-go-name: Country
      - name: start_at
        in: query
        description: Filter output by start time using a UNIX timestamp
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int64
          x-go-name: StartAt
        x-go-name: StartAt
      - name: end_at
        in: query
        description: Filter output by end time using a UNIX timestamp
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int64
          x-go-name: EndAt
        x-go-name: EndAt
      - name: page
        in: query
        description: Specific page of a paginated result to be displayed
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
          default: 0
          x-go-name: Page
        x-go-name: Page
      - name: page_size
        in: query
        description: Number of items displayed per page in a paginated result
        required: false
        style: form
        explode: true
        schema:
          maximum: 1000
          type: integer
          format: int32
          default: 30
          x-go-name: PageSize
        x-go-name: PageSize
      - name: order
        in: query
        description: Sorting order of the output series
        required: false
        style: form
        explode: true
        schema:
          type: string
          default: desc
          enum:
          - desc
          - asc
          x-go-name: Order
          x-order: '"40"'
        x-go-name: Order
        x-order: '"40"'
      - name: prepost
        in: query
        description: Indicates whether data should be included for extended hours
          of trading
        required: false
        style: form
        explode: true
        schema:
          type: boolean
          default: false
          x-go-name: Prepost
        x-go-name: Prepost
      - name: adjust
        in: query
        description: "Apply adjusting for data (all, splits, dividends, none)"
        required: false
        style: form
        explode: true
        schema:
          type: string
          default: all
          x-go-name: Adjust
        x-go-name: Adjust
      - name: series_type
        in: query
        description: Specifies the price data type on which technical indicator is
          calculated
        required: false
        style: form
        explode: true
        schema:
          type: string
          default: close
          enum:
          - open
          - high
          - low
          - close
          x-go-name: SeriesType
        x-go-name: SeriesType
      - name: time_period
        in: query
        description: Number of periods to average over.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int64
          default: 20
          x-go-name: TimePeriod
        x-go-name: TimePeriod
      - name: sd
        in: query
        description: Number of standard deviations
        required: false
        style: form
        explode: true
        schema:
          type: number
          format: double
          default: 2.0
          x-go-name: StandardDeviation
        x-go-name: StandardDeviation
      - name: ma_type
        in: query
        description: "The type of moving average used, such as SMA or EMA"
        required: false
        style: form
        explode: true
        schema:
          type: string
          default: SMA
          enum:
          - SMA
          - EMA
          - WMA
          - DEMA
          - TEMA
          - TRIMA
          - KAMA
          - MAMA
          - T3MA
          x-go-name: MAType
        x-go-name: MAType
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TechnicalIndicatorResponseBBands'
                x-content-type: application/json
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TechnicalIndicatorResponseBBands'
      security:
      - api_key: []
      x-group: Market data/Technical indicators
      x-order: "20"
  /time_series/ichimoku:
    get:
      tags:
      - technical_indicator
      - Data
      summary: Overlap Studies
      description: "The Ichimoku Cloud (ICHIMOKU) is a comprehensive trend-following\
        \ indicator that combines multiple moving averages and support/resistance\
        \ levels to help traders identify potential entry and exit points, trend direction,\
        \ and momentum."
      operationId: GetTechnicalIndicatorIchimoku
      parameters:
      - name: cqs
        in: query
        description: Filter by cqs symbol
        required: false
        style: form
        explode: true
        schema:
          type: string
          x-go-name: Cqs
          x-order: '"5000"'
        x-go-name: Cqs
        x-order: '"5000"'
      - name: cik
        in: query
        description: Filter by cik code
        required: false
        style: form
        explode: true
        schema:
          type: string
          x-go-name: Cik
          x-order: '"5010"'
        x-go-name: Cik
        x-order: '"5010"'
      - name: cusip
        in: query
        description: Filter by cusip code
        required: false
        style: form
        explode: true
        schema:
          type: string
          x-go-name: Cusip
          x-order: '"5020"'
        x-go-name: Cusip
        x-order: '"5020"'
      - name: isin
        in: query
        description: Filter by isin code
        required: false
        style: form
        explode: true
        schema:
          type: string
          x-go-name: Isin
          x-order: '"5030"'
        x-go-name: Isin
        x-order: '"5030"'
      - name: composite_figi
        in: query
        description: Filter by composite figi code
        required: false
        style: form
        explode: true
        schema:
          type: string
          x-go-name: CompositeFigi
          x-order: '"5040"'
        x-go-name: CompositeFigi
        x-order: '"5040"'
      - name: share_figi
        in: query
        description: Filter by share class figi code
        required: false
        style: form
        explode: true
        schema:
          type: string
          x-go-name: ShareFigi
          x-order: '"5050"'
        x-go-name: ShareFigi
        x-order: '"5050"'
      - name: lei
        in: query
        description: Filter by lei code
        required: false
        style: form
        explode: true
        schema:
          type: string
          x-go-name: Lei
          x-order: '"5060"'
        x-go-name: Lei
        x-order: '"5060"'
      - name: dataset
        in: query
        description: Filter by Finazon's dataset code
        required: true
        style: form
        explode: true
        schema:
          type: string
          x-go-name: Dataset
          x-order: '"10"'
        x-go-name: Dataset
        x-order: '"10"'
      - name: ticker
        in: query
        description: Filter by ticker symbol
        required: true
        style: form
        explode: true
        schema:
          type: string
          x-go-name: Ticker
          x-order: '"20"'
        x-go-name: Ticker
        x-order: '"20"'
      - name: interval
        in: query
        description: Interval between two consecutive points in time series
        required: true
        style: form
        explode: true
        schema:
          type: string
          enum:
          - 1m
          - 2m
          - 3m
          - 4m
          - 5m
          - 10m
          - 15m
          - 20m
          - 30m
          - 45m
          - 1h
          - 2h
          - 3h
          - 4h
          - 8h
          - 12h
          - 1d
          - 1w
          - 1mo
          - 2mo
          - 3mo
          - 4mo
          x-go-name: Interval
          x-order: '"30"'
        x-go-name: Interval
        x-order: '"30"'
      - name: market
        in: query
        description: Filter by market
        required: false
        style: form
        explode: true
        schema:
          type: string
          x-go-name: Market
        x-go-name: Market
      - name: country
        in: query
        description: Filter by ISO 3166 alpha-2 code
        required: false
        style: form
        explode: true
        schema:
          type: string
          x-go-name: Country
        x-go-name: Country
      - name: start_at
        in: query
        description: Filter output by start time using a UNIX timestamp
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int64
          x-go-name: StartAt
        x-go-name: StartAt
      - name: end_at
        in: query
        description: Filter output by end time using a UNIX timestamp
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int64
          x-go-name: EndAt
        x-go-name: EndAt
      - name: page
        in: query
        description: Specific page of a paginated result to be displayed
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
          default: 0
          x-go-name: Page
        x-go-name: Page
      - name: page_size
        in: query
        description: Number of items displayed per page in a paginated result
        required: false
        style: form
        explode: true
        schema:
          maximum: 1000
          type: integer
          format: int32
          default: 30
          x-go-name: PageSize
        x-go-name: PageSize
      - name: order
        in: query
        description: Sorting order of the output series
        required: false
        style: form
        explode: true
        schema:
          type: string
          default: desc
          enum:
          - desc
          - asc
          x-go-name: Order
          x-order: '"40"'
        x-go-name: Order
        x-order: '"40"'
      - name: prepost
        in: query
        description: Indicates whether data should be included for extended hours
          of trading
        required: false
        style: form
        explode: true
        schema:
          type: boolean
          default: false
          x-go-name: Prepost
        x-go-name: Prepost
      - name: adjust
        in: query
        description: "Apply adjusting for data (all, splits, dividends, none)"
        required: false
        style: form
        explode: true
        schema:
          type: string
          default: all
          x-go-name: Adjust
        x-go-name: Adjust
      - name: conversion_line_period
        in: query
        description: The time period used for generating the conversation line
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int64
          default: 9
          x-go-name: ConversionLinePeriod
        x-go-name: ConversionLinePeriod
      - name: base_line_period
        in: query
        description: The time period used for generating the base line
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int64
          default: 26
          x-go-name: BaseLinePeriod
        x-go-name: BaseLinePeriod
      - name: leading_span_b_period
        in: query
        description: The time period used for generating the leading span B line
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int64
          default: 52
          x-go-name: LeadingSpanBPeriod
        x-go-name: LeadingSpanBPeriod
      - name: lagging_span_period
        in: query
        description: The time period used for generating the lagging span line
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int64
          default: 26
          x-go-name: LaggingSpanPeriod
        x-go-name: LaggingSpanPeriod
      - name: include_ahead_span_period
        in: query
        description: Indicates whether to include ahead span period
        required: false
        style: form
        explode: true
        schema:
          type: boolean
          default: true
          x-go-name: IncludeAheadSpanPeriod
        x-go-name: IncludeAheadSpanPeriod
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TechnicalIndicatorResponseIchimoku'
                x-content-type: application/json
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TechnicalIndicatorResponseIchimoku'
      security:
      - api_key: []
      x-group: Market data/Technical indicators
      x-order: "30"
  /time_series/ma:
    get:
      tags:
      - technical_indicator
      - Data
      summary: Overlap Studies
      description: "The Moving Average (MA) is a smoothing indicator that calculates\
        \ the average price of a security over a specified period, helping traders\
        \ identify trends and potential support or resistance levels."
      operationId: GetTechnicalIndicatorMa
      parameters:
      - name: cqs
        in: query
        description: Filter by cqs symbol
        required: false
        style: form
        explode: true
        schema:
          type: string
          x-go-name: Cqs
          x-order: '"5000"'
        x-go-name: Cqs
        x-order: '"5000"'
      - name: cik
        in: query
        description: Filter by cik code
        required: false
        style: form
        explode: true
        schema:
          type: string
          x-go-name: Cik
          x-order: '"5010"'
        x-go-name: Cik
        x-order: '"5010"'
      - name: cusip
        in: query
        description: Filter by cusip code
        required: false
        style: form
        explode: true
        schema:
          type: string
          x-go-name: Cusip
          x-order: '"5020"'
        x-go-name: Cusip
        x-order: '"5020"'
      - name: isin
        in: query
        description: Filter by isin code
        required: false
        style: form
        explode: true
        schema:
          type: string
          x-go-name: Isin
          x-order: '"5030"'
        x-go-name: Isin
        x-order: '"5030"'
      - name: composite_figi
        in: query
        description: Filter by composite figi code
        required: false
        style: form
        explode: true
        schema:
          type: string
          x-go-name: CompositeFigi
          x-order: '"5040"'
        x-go-name: CompositeFigi
        x-order: '"5040"'
      - name: share_figi
        in: query
        description: Filter by share class figi code
        required: false
        style: form
        explode: true
        schema:
          type: string
          x-go-name: ShareFigi
          x-order: '"5050"'
        x-go-name: ShareFigi
        x-order: '"5050"'
      - name: lei
        in: query
        description: Filter by lei code
        required: false
        style: form
        explode: true
        schema:
          type: string
          x-go-name: Lei
          x-order: '"5060"'
        x-go-name: Lei
        x-order: '"5060"'
      - name: dataset
        in: query
        description: Filter by Finazon's dataset code
        required: true
        style: form
        explode: true
        schema:
          type: string
          x-go-name: Dataset
          x-order: '"10"'
        x-go-name: Dataset
        x-order: '"10"'
      - name: ticker
        in: query
        description: Filter by ticker symbol
        required: true
        style: form
        explode: true
        schema:
          type: string
          x-go-name: Ticker
          x-order: '"20"'
        x-go-name: Ticker
        x-order: '"20"'
      - name: interval
        in: query
        description: Interval between two consecutive points in time series
        required: true
        style: form
        explode: true
        schema:
          type: string
          enum:
          - 1m
          - 2m
          - 3m
          - 4m
          - 5m
          - 10m
          - 15m
          - 20m
          - 30m
          - 45m
          - 1h
          - 2h
          - 3h
          - 4h
          - 8h
          - 12h
          - 1d
          - 1w
          - 1mo
          - 2mo
          - 3mo
          - 4mo
          x-go-name: Interval
          x-order: '"30"'
        x-go-name: Interval
        x-order: '"30"'
      - name: market
        in: query
        description: Filter by market
        required: false
        style: form
        explode: true
        schema:
          type: string
          x-go-name: Market
        x-go-name: Market
      - name: country
        in: query
        description: Filter by ISO 3166 alpha-2 code
        required: false
        style: form
        explode: true
        schema:
          type: string
          x-go-name: Country
        x-go-name: Country
      - name: start_at
        in: query
        description: Filter output by start time using a UNIX timestamp
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int64
          x-go-name: StartAt
        x-go-name: StartAt
      - name: end_at
        in: query
        description: Filter output by end time using a UNIX timestamp
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int64
          x-go-name: EndAt
        x-go-name: EndAt
      - name: page
        in: query
        description: Specific page of a paginated result to be displayed
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
          default: 0
          x-go-name: Page
        x-go-name: Page
      - name: page_size
        in: query
        description: Number of items displayed per page in a paginated result
        required: false
        style: form
        explode: true
        schema:
          maximum: 1000
          type: integer
          format: int32
          default: 30
          x-go-name: PageSize
        x-go-name: PageSize
      - name: order
        in: query
        description: Sorting order of the output series
        required: false
        style: form
        explode: true
        schema:
          type: string
          default: desc
          enum:
          - desc
          - asc
          x-go-name: Order
          x-order: '"40"'
        x-go-name: Order
        x-order: '"40"'
      - name: prepost
        in: query
        description: Indicates whether data should be included for extended hours
          of trading
        required: false
        style: form
        explode: true
        schema:
          type: boolean
          default: false
          x-go-name: Prepost
        x-go-name: Prepost
      - name: adjust
        in: query
        description: "Apply adjusting for data (all, splits, dividends, none)"
        required: false
        style: form
        explode: true
        schema:
          type: string
          default: all
          x-go-name: Adjust
        x-go-name: Adjust
      - name: series_type
        in: query
        description: Specifies the price data type on which technical indicator is
          calculated
        required: false
        style: form
        explode: true
        schema:
          type: string
          default: close
          enum:
          - open
          - high
          - low
          - close
          x-go-name: SeriesType
        x-go-name: SeriesType
      - name: time_period
        in: query
        description: Number of periods to average over.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int64
          default: 9
          x-go-name: TimePeriod
        x-go-name: TimePeriod
      - name: ma_type
        in: query
        description: "The type of moving average used, such as SMA or EMA"
        required: false
        style: form
        explode: true
        schema:
          type: string
          default: SMA
          enum:
          - SMA
          - EMA
          - WMA
          - DEMA
          - TEMA
          - TRIMA
          - KAMA
          - MAMA
          - T3MA
          x-go-name: MAType
        x-go-name: MAType
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TechnicalIndicatorResponseMa'
                x-content-type: application/json
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TechnicalIndicatorResponseMa'
      security:
      - api_key: []
      x-group: Market data/Technical indicators
      x-order: "40"
  /time_series/macd:
    get:
      tags:
      - technical_indicator
      - Data
      summary: Momentum Indicators
      description: "The Moving Average Convergence Divergence (MACD) is a momentum\
        \ indicator that measures the difference between two moving averages, with\
        \ a signal line used to identify potential trend reversals and trading opportunities."
      operationId: GetTechnicalIndicatorMacd
      parameters:
      - name: cqs
        in: query
        description: Filter by cqs symbol
        required: false
        style: form
        explode: true
        schema:
          type: string
          x-go-name: Cqs
          x-order: '"5000"'
        x-go-name: Cqs
        x-order: '"5000"'
      - name: cik
        in: query
        description: Filter by cik code
        required: false
        style: form
        explode: true
        schema:
          type: string
          x-go-name: Cik
          x-order: '"5010"'
        x-go-name: Cik
        x-order: '"5010"'
      - name: cusip
        in: query
        description: Filter by cusip code
        required: false
        style: form
        explode: true
        schema:
          type: string
          x-go-name: Cusip
          x-order: '"5020"'
        x-go-name: Cusip
        x-order: '"5020"'
      - name: isin
        in: query
        description: Filter by isin code
        required: false
        style: form
        explode: true
        schema:
          type: string
          x-go-name: Isin
          x-order: '"5030"'
        x-go-name: Isin
        x-order: '"5030"'
      - name: composite_figi
        in: query
        description: Filter by composite figi code
        required: false
        style: form
        explode: true
        schema:
          type: string
          x-go-name: CompositeFigi
          x-order: '"5040"'
        x-go-name: CompositeFigi
        x-order: '"5040"'
      - name: share_figi
        in: query
        description: Filter by share class figi code
        required: false
        style: form
        explode: true
        schema:
          type: string
          x-go-name: ShareFigi
          x-order: '"5050"'
        x-go-name: ShareFigi
        x-order: '"5050"'
      - name: lei
        in: query
        description: Filter by lei code
        required: false
        style: form
        explode: true
        schema:
          type: string
          x-go-name: Lei
          x-order: '"5060"'
        x-go-name: Lei
        x-order: '"5060"'
      - name: dataset
        in: query
        description: Filter by Finazon's dataset code
        required: true
        style: form
        explode: true
        schema:
          type: string
          x-go-name: Dataset
          x-order: '"10"'
        x-go-name: Dataset
        x-order: '"10"'
      - name: ticker
        in: query
        description: Filter by ticker symbol
        required: true
        style: form
        explode: true
        schema:
          type: string
          x-go-name: Ticker
          x-order: '"20"'
        x-go-name: Ticker
        x-order: '"20"'
      - name: interval
        in: query
        description: Interval between two consecutive points in time series
        required: true
        style: form
        explode: true
        schema:
          type: string
          enum:
          - 1m
          - 2m
          - 3m
          - 4m
          - 5m
          - 10m
          - 15m
          - 20m
          - 30m
          - 45m
          - 1h
          - 2h
          - 3h
          - 4h
          - 8h
          - 12h
          - 1d
          - 1w
          - 1mo
          - 2mo
          - 3mo
          - 4mo
          x-go-name: Interval
          x-order: '"30"'
        x-go-name: Interval
        x-order: '"30"'
      - name: market
        in: query
        description: Filter by market
        required: false
        style: form
        explode: true
        schema:
          type: string
          x-go-name: Market
        x-go-name: Market
      - name: country
        in: query
        description: Filter by ISO 3166 alpha-2 code
        required: false
        style: form
        explode: true
        schema:
          type: string
          x-go-name: Country
        x-go-name: Country
      - name: start_at
        in: query
        description: Filter output by start time using a UNIX timestamp
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int64
          x-go-name: StartAt
        x-go-name: StartAt
      - name: end_at
        in: query
        description: Filter output by end time using a UNIX timestamp
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int64
          x-go-name: EndAt
        x-go-name: EndAt
      - name: page
        in: query
        description: Specific page of a paginated result to be displayed
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
          default: 0
          x-go-name: Page
        x-go-name: Page
      - name: page_size
        in: query
        description: Number of items displayed per page in a paginated result
        required: false
        style: form
        explode: true
        schema:
          maximum: 1000
          type: integer
          format: int32
          default: 30
          x-go-name: PageSize
        x-go-name: PageSize
      - name: order
        in: query
        description: Sorting order of the output series
        required: false
        style: form
        explode: true
        schema:
          type: string
          default: desc
          enum:
          - desc
          - asc
          x-go-name: Order
          x-order: '"40"'
        x-go-name: Order
        x-order: '"40"'
      - name: prepost
        in: query
        description: Indicates whether data should be included for extended hours
          of trading
        required: false
        style: form
        explode: true
        schema:
          type: boolean
          default: false
          x-go-name: Prepost
        x-go-name: Prepost
      - name: adjust
        in: query
        description: "Apply adjusting for data (all, splits, dividends, none)"
        required: false
        style: form
        explode: true
        schema:
          type: string
          default: all
          x-go-name: Adjust
        x-go-name: Adjust
      - name: series_type
        in: query
        description: Specifies the price data type on which technical indicator is
          calculated
        required: false
        style: form
        explode: true
        schema:
          type: string
          default: close
          enum:
          - open
          - high
          - low
          - close
          x-go-name: SeriesType
        x-go-name: SeriesType
      - name: fast_period
        in: query
        description: Number of periods for fast moving average
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int64
          default: 12
          x-go-name: FastPeriod
        x-go-name: FastPeriod
      - name: slow_period
        in: query
        description: Number of periods for slow moving average
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int64
          default: 26
          x-go-name: SlowPeriod
        x-go-name: SlowPeriod
      - name: signal_period
        in: query
        description: The time period used for generating the signal line
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int64
          default: 9
          x-go-name: SignalPeriod
        x-go-name: SignalPeriod
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TechnicalIndicatorResponseMacd'
                x-content-type: application/json
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TechnicalIndicatorResponseMacd'
      security:
      - api_key: []
      x-group: Market data/Technical indicators
      x-order: "50"
  /time_series/obv:
    get:
      tags:
      - technical_indicator
      - Data
      summary: Volume Indicators
      description: "The On Balance Volume (OBV) indicator is a cumulative volume-based\
        \ tool used to measure buying and selling pressure, helping traders identify\
        \ potential price trends and reversals."
      operationId: GetTechnicalIndicatorObv
      parameters:
      - name: cqs
        in: query
        description: Filter by cqs symbol
        required: false
        style: form
        explode: true
        schema:
          type: string
          x-go-name: Cqs
          x-order: '"5000"'
        x-go-name: Cqs
        x-order: '"5000"'
      - name: cik
        in: query
        description: Filter by cik code
        required: false
        style: form
        explode: true
        schema:
          type: string
          x-go-name: Cik
          x-order: '"5010"'
        x-go-name: Cik
        x-order: '"5010"'
      - name: cusip
        in: query
        description: Filter by cusip code
        required: false
        style: form
        explode: true
        schema:
          type: string
          x-go-name: Cusip
          x-order: '"5020"'
        x-go-name: Cusip
        x-order: '"5020"'
      - name: isin
        in: query
        description: Filter by isin code
        required: false
        style: form
        explode: true
        schema:
          type: string
          x-go-name: Isin
          x-order: '"5030"'
        x-go-name: Isin
        x-order: '"5030"'
      - name: composite_figi
        in: query
        description: Filter by composite figi code
        required: false
        style: form
        explode: true
        schema:
          type: string
          x-go-name: CompositeFigi
          x-order: '"5040"'
        x-go-name: CompositeFigi
        x-order: '"5040"'
      - name: share_figi
        in: query
        description: Filter by share class figi code
        required: false
        style: form
        explode: true
        schema:
          type: string
          x-go-name: ShareFigi
          x-order: '"5050"'
        x-go-name: ShareFigi
        x-order: '"5050"'
      - name: lei
        in: query
        description: Filter by lei code
        required: false
        style: form
        explode: true
        schema:
          type: string
          x-go-name: Lei
          x-order: '"5060"'
        x-go-name: Lei
        x-order: '"5060"'
      - name: dataset
        in: query
        description: Filter by Finazon's dataset code
        required: true
        style: form
        explode: true
        schema:
          type: string
          x-go-name: Dataset
          x-order: '"10"'
        x-go-name: Dataset
        x-order: '"10"'
      - name: ticker
        in: query
        description: Filter by ticker symbol
        required: true
        style: form
        explode: true
        schema:
          type: string
          x-go-name: Ticker
          x-order: '"20"'
        x-go-name: Ticker
        x-order: '"20"'
      - name: interval
        in: query
        description: Interval between two consecutive points in time series
        required: true
        style: form
        explode: true
        schema:
          type: string
          enum:
          - 1m
          - 2m
          - 3m
          - 4m
          - 5m
          - 10m
          - 15m
          - 20m
          - 30m
          - 45m
          - 1h
          - 2h
          - 3h
          - 4h
          - 8h
          - 12h
          - 1d
          - 1w
          - 1mo
          - 2mo
          - 3mo
          - 4mo
          x-go-name: Interval
          x-order: '"30"'
        x-go-name: Interval
        x-order: '"30"'
      - name: market
        in: query
        description: Filter by market
        required: false
        style: form
        explode: true
        schema:
          type: string
          x-go-name: Market
        x-go-name: Market
      - name: country
        in: query
        description: Filter by ISO 3166 alpha-2 code
        required: false
        style: form
        explode: true
        schema:
          type: string
          x-go-name: Country
        x-go-name: Country
      - name: start_at
        in: query
        description: Filter output by start time using a UNIX timestamp
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int64
          x-go-name: StartAt
        x-go-name: StartAt
      - name: end_at
        in: query
        description: Filter output by end time using a UNIX timestamp
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int64
          x-go-name: EndAt
        x-go-name: EndAt
      - name: page
        in: query
        description: Specific page of a paginated result to be displayed
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
          default: 0
          x-go-name: Page
        x-go-name: Page
      - name: page_size
        in: query
        description: Number of items displayed per page in a paginated result
        required: false
        style: form
        explode: true
        schema:
          maximum: 1000
          type: integer
          format: int32
          default: 30
          x-go-name: PageSize
        x-go-name: PageSize
      - name: order
        in: query
        description: Sorting order of the output series
        required: false
        style: form
        explode: true
        schema:
          type: string
          default: desc
          enum:
          - desc
          - asc
          x-go-name: Order
          x-order: '"40"'
        x-go-name: Order
        x-order: '"40"'
      - name: prepost
        in: query
        description: Indicates whether data should be included for extended hours
          of trading
        required: false
        style: form
        explode: true
        schema:
          type: boolean
          default: false
          x-go-name: Prepost
        x-go-name: Prepost
      - name: adjust
        in: query
        description: "Apply adjusting for data (all, splits, dividends, none)"
        required: false
        style: form
        explode: true
        schema:
          type: string
          default: all
          x-go-name: Adjust
        x-go-name: Adjust
      - name: series_type
        in: query
        description: Specifies the price data type on which technical indicator is
          calculated
        required: false
        style: form
        explode: true
        schema:
          type: string
          default: close
          enum:
          - open
          - high
          - low
          - close
          x-go-name: SeriesType
        x-go-name: SeriesType
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TechnicalIndicatorResponseObv'
                x-content-type: application/json
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TechnicalIndicatorResponseObv'
      security:
      - api_key: []
      x-group: Market data/Technical indicators
      x-order: "60"
  /time_series/rsi:
    get:
      tags:
      - technical_indicator
      - Data
      summary: Momentum Indicators
      description: "The Relative Strength Index (RSI) is a momentum oscillator that\
        \ measures the speed and change of price movements, helping traders identify\
        \ potential overbought or oversold conditions and trend reversals."
      operationId: GetTechnicalIndicatorRsi
      parameters:
      - name: cqs
        in: query
        description: Filter by cqs symbol
        required: false
        style: form
        explode: true
        schema:
          type: string
          x-go-name: Cqs
          x-order: '"5000"'
        x-go-name: Cqs
        x-order: '"5000"'
      - name: cik
        in: query
        description: Filter by cik code
        required: false
        style: form
        explode: true
        schema:
          type: string
          x-go-name: Cik
          x-order: '"5010"'
        x-go-name: Cik
        x-order: '"5010"'
      - name: cusip
        in: query
        description: Filter by cusip code
        required: false
        style: form
        explode: true
        schema:
          type: string
          x-go-name: Cusip
          x-order: '"5020"'
        x-go-name: Cusip
        x-order: '"5020"'
      - name: isin
        in: query
        description: Filter by isin code
        required: false
        style: form
        explode: true
        schema:
          type: string
          x-go-name: Isin
          x-order: '"5030"'
        x-go-name: Isin
        x-order: '"5030"'
      - name: composite_figi
        in: query
        description: Filter by composite figi code
        required: false
        style: form
        explode: true
        schema:
          type: string
          x-go-name: CompositeFigi
          x-order: '"5040"'
        x-go-name: CompositeFigi
        x-order: '"5040"'
      - name: share_figi
        in: query
        description: Filter by share class figi code
        required: false
        style: form
        explode: true
        schema:
          type: string
          x-go-name: ShareFigi
          x-order: '"5050"'
        x-go-name: ShareFigi
        x-order: '"5050"'
      - name: lei
        in: query
        description: Filter by lei code
        required: false
        style: form
        explode: true
        schema:
          type: string
          x-go-name: Lei
          x-order: '"5060"'
        x-go-name: Lei
        x-order: '"5060"'
      - name: dataset
        in: query
        description: Filter by Finazon's dataset code
        required: true
        style: form
        explode: true
        schema:
          type: string
          x-go-name: Dataset
          x-order: '"10"'
        x-go-name: Dataset
        x-order: '"10"'
      - name: ticker
        in: query
        description: Filter by ticker symbol
        required: true
        style: form
        explode: true
        schema:
          type: string
          x-go-name: Ticker
          x-order: '"20"'
        x-go-name: Ticker
        x-order: '"20"'
      - name: interval
        in: query
        description: Interval between two consecutive points in time series
        required: true
        style: form
        explode: true
        schema:
          type: string
          enum:
          - 1m
          - 2m
          - 3m
          - 4m
          - 5m
          - 10m
          - 15m
          - 20m
          - 30m
          - 45m
          - 1h
          - 2h
          - 3h
          - 4h
          - 8h
          - 12h
          - 1d
          - 1w
          - 1mo
          - 2mo
          - 3mo
          - 4mo
          x-go-name: Interval
          x-order: '"30"'
        x-go-name: Interval
        x-order: '"30"'
      - name: market
        in: query
        description: Filter by market
        required: false
        style: form
        explode: true
        schema:
          type: string
          x-go-name: Market
        x-go-name: Market
      - name: country
        in: query
        description: Filter by ISO 3166 alpha-2 code
        required: false
        style: form
        explode: true
        schema:
          type: string
          x-go-name: Country
        x-go-name: Country
      - name: start_at
        in: query
        description: Filter output by start time using a UNIX timestamp
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int64
          x-go-name: StartAt
        x-go-name: StartAt
      - name: end_at
        in: query
        description: Filter output by end time using a UNIX timestamp
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int64
          x-go-name: EndAt
        x-go-name: EndAt
      - name: page
        in: query
        description: Specific page of a paginated result to be displayed
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
          default: 0
          x-go-name: Page
        x-go-name: Page
      - name: page_size
        in: query
        description: Number of items displayed per page in a paginated result
        required: false
        style: form
        explode: true
        schema:
          maximum: 1000
          type: integer
          format: int32
          default: 30
          x-go-name: PageSize
        x-go-name: PageSize
      - name: order
        in: query
        description: Sorting order of the output series
        required: false
        style: form
        explode: true
        schema:
          type: string
          default: desc
          enum:
          - desc
          - asc
          x-go-name: Order
          x-order: '"40"'
        x-go-name: Order
        x-order: '"40"'
      - name: prepost
        in: query
        description: Indicates whether data should be included for extended hours
          of trading
        required: false
        style: form
        explode: true
        schema:
          type: boolean
          default: false
          x-go-name: Prepost
        x-go-name: Prepost
      - name: adjust
        in: query
        description: "Apply adjusting for data (all, splits, dividends, none)"
        required: false
        style: form
        explode: true
        schema:
          type: string
          default: all
          x-go-name: Adjust
        x-go-name: Adjust
      - name: series_type
        in: query
        description: Specifies the price data type on which technical indicator is
          calculated
        required: false
        style: form
        explode: true
        schema:
          type: string
          default: close
          enum:
          - open
          - high
          - low
          - close
          x-go-name: SeriesType
        x-go-name: SeriesType
      - name: time_period
        in: query
        description: Number of periods to average over
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int64
          default: 14
          x-go-name: TimePeriod
        x-go-name: TimePeriod
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TechnicalIndicatorResponseRsi'
                x-content-type: application/json
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TechnicalIndicatorResponseRsi'
      security:
      - api_key: []
      x-group: Market data/Technical indicators
      x-order: "70"
  /time_series/sar:
    get:
      tags:
      - technical_indicator
      - Data
      summary: Overlap Studies
      description: "The Parabolic SAR (SAR) is a trend-following indicator that calculates\
        \ potential support and resistance levels based on a security's price and\
        \ time, helping traders identify potential entry and exit points."
      operationId: GetTechnicalIndicatorSar
      parameters:
      - name: cqs
        in: query
        description: Filter by cqs symbol
        required: false
        style: form
        explode: true
        schema:
          type: string
          x-go-name: Cqs
          x-order: '"5000"'
        x-go-name: Cqs
        x-order: '"5000"'
      - name: cik
        in: query
        description: Filter by cik code
        required: false
        style: form
        explode: true
        schema:
          type: string
          x-go-name: Cik
          x-order: '"5010"'
        x-go-name: Cik
        x-order: '"5010"'
      - name: cusip
        in: query
        description: Filter by cusip code
        required: false
        style: form
        explode: true
        schema:
          type: string
          x-go-name: Cusip
          x-order: '"5020"'
        x-go-name: Cusip
        x-order: '"5020"'
      - name: isin
        in: query
        description: Filter by isin code
        required: false
        style: form
        explode: true
        schema:
          type: string
          x-go-name: Isin
          x-order: '"5030"'
        x-go-name: Isin
        x-order: '"5030"'
      - name: composite_figi
        in: query
        description: Filter by composite figi code
        required: false
        style: form
        explode: true
        schema:
          type: string
          x-go-name: CompositeFigi
          x-order: '"5040"'
        x-go-name: CompositeFigi
        x-order: '"5040"'
      - name: share_figi
        in: query
        description: Filter by share class figi code
        required: false
        style: form
        explode: true
        schema:
          type: string
          x-go-name: ShareFigi
          x-order: '"5050"'
        x-go-name: ShareFigi
        x-order: '"5050"'
      - name: lei
        in: query
        description: Filter by lei code
        required: false
        style: form
        explode: true
        schema:
          type: string
          x-go-name: Lei
          x-order: '"5060"'
        x-go-name: Lei
        x-order: '"5060"'
      - name: dataset
        in: query
        description: Filter by Finazon's dataset code
        required: true
        style: form
        explode: true
        schema:
          type: string
          x-go-name: Dataset
          x-order: '"10"'
        x-go-name: Dataset
        x-order: '"10"'
      - name: ticker
        in: query
        description: Filter by ticker symbol
        required: true
        style: form
        explode: true
        schema:
          type: string
          x-go-name: Ticker
          x-order: '"20"'
        x-go-name: Ticker
        x-order: '"20"'
      - name: interval
        in: query
        description: Interval between two consecutive points in time series
        required: true
        style: form
        explode: true
        schema:
          type: string
          enum:
          - 1m
          - 2m
          - 3m
          - 4m
          - 5m
          - 10m
          - 15m
          - 20m
          - 30m
          - 45m
          - 1h
          - 2h
          - 3h
          - 4h
          - 8h
          - 12h
          - 1d
          - 1w
          - 1mo
          - 2mo
          - 3mo
          - 4mo
          x-go-name: Interval
          x-order: '"30"'
        x-go-name: Interval
        x-order: '"30"'
      - name: market
        in: query
        description: Filter by market
        required: false
        style: form
        explode: true
        schema:
          type: string
          x-go-name: Market
        x-go-name: Market
      - name: country
        in: query
        description: Filter by ISO 3166 alpha-2 code
        required: false
        style: form
        explode: true
        schema:
          type: string
          x-go-name: Country
        x-go-name: Country
      - name: start_at
        in: query
        description: Filter output by start time using a UNIX timestamp
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int64
          x-go-name: StartAt
        x-go-name: StartAt
      - name: end_at
        in: query
        description: Filter output by end time using a UNIX timestamp
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int64
          x-go-name: EndAt
        x-go-name: EndAt
      - name: page
        in: query
        description: Specific page of a paginated result to be displayed
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
          default: 0
          x-go-name: Page
        x-go-name: Page
      - name: page_size
        in: query
        description: Number of items displayed per page in a paginated result
        required: false
        style: form
        explode: true
        schema:
          maximum: 1000
          type: integer
          format: int32
          default: 30
          x-go-name: PageSize
        x-go-name: PageSize
      - name: order
        in: query
        description: Sorting order of the output series
        required: false
        style: form
        explode: true
        schema:
          type: string
          default: desc
          enum:
          - desc
          - asc
          x-go-name: Order
          x-order: '"40"'
        x-go-name: Order
        x-order: '"40"'
      - name: prepost
        in: query
        description: Indicates whether data should be included for extended hours
          of trading
        required: false
        style: form
        explode: true
        schema:
          type: boolean
          default: false
          x-go-name: Prepost
        x-go-name: Prepost
      - name: adjust
        in: query
        description: "Apply adjusting for data (all, splits, dividends, none)"
        required: false
        style: form
        explode: true
        schema:
          type: string
          default: all
          x-go-name: Adjust
        x-go-name: Adjust
      - name: acceleration
        in: query
        description: Initial acceleration factor
        required: false
        style: form
        explode: true
        schema:
          type: number
          format: double
          default: 0.02
          x-go-name: Acceleration
        x-go-name: Acceleration
      - name: maximum
        in: query
        description: Maximum value for the acceleration factor
        required: false
        style: form
        explode: true
        schema:
          type: number
          format: double
          default: 0.2
          x-go-name: Maximum
        x-go-name: Maximum
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TechnicalIndicatorResponseSar'
                x-content-type: application/json
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TechnicalIndicatorResponseSar'
      security:
      - api_key: []
      x-group: Market data/Technical indicators
      x-order: "80"
  /time_series/stoch:
    get:
      tags:
      - technical_indicator
      - Data
      summary: Momentum Indicators
      description: "The Stochastic Oscillator (STOCH) is a momentum indicator that\
        \ compares a security's closing price to its price range over a specified\
        \ period, helping traders identify potential overbought or oversold conditions\
        \ and trend reversals."
      operationId: GetTechnicalIndicatorStoch
      parameters:
      - name: cqs
        in: query
        description: Filter by cqs symbol
        required: false
        style: form
        explode: true
        schema:
          type: string
          x-go-name: Cqs
          x-order: '"5000"'
        x-go-name: Cqs
        x-order: '"5000"'
      - name: cik
        in: query
        description: Filter by cik code
        required: false
        style: form
        explode: true
        schema:
          type: string
          x-go-name: Cik
          x-order: '"5010"'
        x-go-name: Cik
        x-order: '"5010"'
      - name: cusip
        in: query
        description: Filter by cusip code
        required: false
        style: form
        explode: true
        schema:
          type: string
          x-go-name: Cusip
          x-order: '"5020"'
        x-go-name: Cusip
        x-order: '"5020"'
      - name: isin
        in: query
        description: Filter by isin code
        required: false
        style: form
        explode: true
        schema:
          type: string
          x-go-name: Isin
          x-order: '"5030"'
        x-go-name: Isin
        x-order: '"5030"'
      - name: composite_figi
        in: query
        description: Filter by composite figi code
        required: false
        style: form
        explode: true
        schema:
          type: string
          x-go-name: CompositeFigi
          x-order: '"5040"'
        x-go-name: CompositeFigi
        x-order: '"5040"'
      - name: share_figi
        in: query
        description: Filter by share class figi code
        required: false
        style: form
        explode: true
        schema:
          type: string
          x-go-name: ShareFigi
          x-order: '"5050"'
        x-go-name: ShareFigi
        x-order: '"5050"'
      - name: lei
        in: query
        description: Filter by lei code
        required: false
        style: form
        explode: true
        schema:
          type: string
          x-go-name: Lei
          x-order: '"5060"'
        x-go-name: Lei
        x-order: '"5060"'
      - name: dataset
        in: query
        description: Filter by Finazon's dataset code
        required: true
        style: form
        explode: true
        schema:
          type: string
          x-go-name: Dataset
          x-order: '"10"'
        x-go-name: Dataset
        x-order: '"10"'
      - name: ticker
        in: query
        description: Filter by ticker symbol
        required: true
        style: form
        explode: true
        schema:
          type: string
          x-go-name: Ticker
          x-order: '"20"'
        x-go-name: Ticker
        x-order: '"20"'
      - name: interval
        in: query
        description: Interval between two consecutive points in time series
        required: true
        style: form
        explode: true
        schema:
          type: string
          enum:
          - 1m
          - 2m
          - 3m
          - 4m
          - 5m
          - 10m
          - 15m
          - 20m
          - 30m
          - 45m
          - 1h
          - 2h
          - 3h
          - 4h
          - 8h
          - 12h
          - 1d
          - 1w
          - 1mo
          - 2mo
          - 3mo
          - 4mo
          x-go-name: Interval
          x-order: '"30"'
        x-go-name: Interval
        x-order: '"30"'
      - name: market
        in: query
        description: Filter by market
        required: false
        style: form
        explode: true
        schema:
          type: string
          x-go-name: Market
        x-go-name: Market
      - name: country
        in: query
        description: Filter by ISO 3166 alpha-2 code
        required: false
        style: form
        explode: true
        schema:
          type: string
          x-go-name: Country
        x-go-name: Country
      - name: start_at
        in: query
        description: Filter output by start time using a UNIX timestamp
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int64
          x-go-name: StartAt
        x-go-name: StartAt
      - name: end_at
        in: query
        description: Filter output by end time using a UNIX timestamp
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int64
          x-go-name: EndAt
        x-go-name: EndAt
      - name: page
        in: query
        description: Specific page of a paginated result to be displayed
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
          default: 0
          x-go-name: Page
        x-go-name: Page
      - name: page_size
        in: query
        description: Number of items displayed per page in a paginated result
        required: false
        style: form
        explode: true
        schema:
          maximum: 1000
          type: integer
          format: int32
          default: 30
          x-go-name: PageSize
        x-go-name: PageSize
      - name: order
        in: query
        description: Sorting order of the output series
        required: false
        style: form
        explode: true
        schema:
          type: string
          default: desc
          enum:
          - desc
          - asc
          x-go-name: Order
          x-order: '"40"'
        x-go-name: Order
        x-order: '"40"'
      - name: prepost
        in: query
        description: Indicates whether data should be included for extended hours
          of trading
        required: false
        style: form
        explode: true
        schema:
          type: boolean
          default: false
          x-go-name: Prepost
        x-go-name: Prepost
      - name: adjust
        in: query
        description: "Apply adjusting for data (all, splits, dividends, none)"
        required: false
        style: form
        explode: true
        schema:
          type: string
          default: all
          x-go-name: Adjust
        x-go-name: Adjust
      - name: fast_k_period
        in: query
        description: The time period for the fast %K line in the Stochastic Oscillator
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int64
          default: 14
          x-go-name: FastKPeriod
        x-go-name: FastKPeriod
      - name: slow_k_period
        in: query
        description: The time period for the slow %K line in the Stochastic Oscillator
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int64
          default: 1
          x-go-name: SlowKPeriod
        x-go-name: SlowKPeriod
      - name: slow_d_period
        in: query
        description: The time period for the slow %D line in the Stochastic Oscillator
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int64
          default: 3
          x-go-name: SlowDPeriod
        x-go-name: SlowDPeriod
      - name: slow_kma_type
        in: query
        description: The type of slow %K Moving Average used
        required: false
        style: form
        explode: true
        schema:
          type: string
          default: SMA
          enum:
          - SMA
          - EMA
          - WMA
          - DEMA
          - TEMA
          - TRIMA
          - KAMA
          - MAMA
          - T3MA
          x-go-name: SlowKMAType
        x-go-name: SlowKMAType
      - name: slow_dma_type
        in: query
        description: The type of slow Displaced Moving Average used
        required: false
        style: form
        explode: true
        schema:
          type: string
          default: SMA
          enum:
          - SMA
          - EMA
          - WMA
          - DEMA
          - TEMA
          - TRIMA
          - KAMA
          - MAMA
          - T3MA
          x-go-name: SlowDMAType
        x-go-name: SlowDMAType
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TechnicalIndicatorResponseStoch'
                x-content-type: application/json
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TechnicalIndicatorResponseStoch'
      security:
      - api_key: []
      x-group: Market data/Technical indicators
      x-order: "90"
  /trades:
    get:
      tags:
      - Data
      summary: Trades
      description: Returns general information on executed trades.
      operationId: GetTrades
      parameters:
      - name: cqs
        in: query
        description: Filter by cqs symbol
        required: false
        style: form
        explode: true
        schema:
          type: string
          x-go-name: Cqs
          x-order: '"5000"'
        x-go-name: Cqs
        x-order: '"5000"'
      - name: cik
        in: query
        description: Filter by cik code
        required: false
        style: form
        explode: true
        schema:
          type: string
          x-go-name: Cik
          x-order: '"5010"'
        x-go-name: Cik
        x-order: '"5010"'
      - name: cusip
        in: query
        description: Filter by cusip code
        required: false
        style: form
        explode: true
        schema:
          type: string
          x-go-name: Cusip
          x-order: '"5020"'
        x-go-name: Cusip
        x-order: '"5020"'
      - name: isin
        in: query
        description: Filter by isin code
        required: false
        style: form
        explode: true
        schema:
          type: string
          x-go-name: Isin
          x-order: '"5030"'
        x-go-name: Isin
        x-order: '"5030"'
      - name: composite_figi
        in: query
        description: Filter by composite figi code
        required: false
        style: form
        explode: true
        schema:
          type: string
          x-go-name: CompositeFigi
          x-order: '"5040"'
        x-go-name: CompositeFigi
        x-order: '"5040"'
      - name: share_figi
        in: query
        description: Filter by share class figi code
        required: false
        style: form
        explode: true
        schema:
          type: string
          x-go-name: ShareFigi
          x-order: '"5050"'
        x-go-name: ShareFigi
        x-order: '"5050"'
      - name: lei
        in: query
        description: Filter by lei code
        required: false
        style: form
        explode: true
        schema:
          type: string
          x-go-name: Lei
          x-order: '"5060"'
        x-go-name: Lei
        x-order: '"5060"'
      - name: dataset
        in: query
        description: Filter by Finazon's dataset code
        required: true
        style: form
        explode: true
        schema:
          type: string
          x-go-name: Dataset
          x-order: '"10"'
        x-go-name: Dataset
        x-order: '"10"'
      - name: ticker
        in: query
        description: Filter by ticker symbol
        required: true
        style: form
        explode: true
        schema:
          type: string
          x-go-name: Ticker
          x-order: '"20"'
        x-go-name: Ticker
        x-order: '"20"'
      - name: country
        in: query
        description: Filter by ISO 3166 alpha-2 code
        required: false
        style: form
        explode: true
        schema:
          type: string
          x-go-name: Country
        x-go-name: Country
      - name: start_at
        in: query
        description: Filter trades by start time using a UNIX timestamp
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int64
          x-go-name: StartAt
        x-go-name: StartAt
      - name: end_at
        in: query
        description: Filter trades by end time using a UNIX timestamp
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int64
          x-go-name: EndAt
        x-go-name: EndAt
      - name: order
        in: query
        description: Sorting order of the output series
        required: false
        style: form
        explode: true
        schema:
          type: string
          default: desc
          enum:
          - desc
          - asc
          x-go-name: Order
          x-order: '"30"'
        x-go-name: Order
        x-order: '"30"'
      - name: page
        in: query
        description: Specific page of a paginated result to be displayed
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
          default: 0
          x-go-name: Page
        x-go-name: Page
      - name: page_size
        in: query
        description: Number of items displayed per page in a paginated result
        required: false
        style: form
        explode: true
        schema:
          maximum: 1000
          type: integer
          format: int32
          default: 1000
          x-go-name: PageSize
        x-go-name: PageSize
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TradesItem'
                x-content-type: application/json
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TradesItem'
      security:
      - api_key: []
      x-group: Market data
      x-order: "30"
  /us_stocks_essential/price:
    get:
      tags:
      - Data
      summary: Price
      description: Returns price value for given ticker.
      operationId: GetPriceUsStocks
      parameters:
      - name: at
        in: query
        description: Filter by start time using a UNIX timestamp. If not specified
          - last price. Else - last price from 1min interval at the event_at <= at
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int64
          x-go-name: At
          x-order: '"150"'
        x-go-name: At
        x-order: '"150"'
      - name: cqs
        in: query
        description: Filter by cqs symbol
        required: false
        style: form
        explode: true
        schema:
          type: string
          x-go-name: Cqs
          x-order: '"5000"'
        x-go-name: Cqs
        x-order: '"5000"'
      - name: cik
        in: query
        description: Filter by cik code
        required: false
        style: form
        explode: true
        schema:
          type: string
          x-go-name: Cik
          x-order: '"5010"'
        x-go-name: Cik
        x-order: '"5010"'
      - name: cusip
        in: query
        description: Filter by cusip code
        required: false
        style: form
        explode: true
        schema:
          type: string
          x-go-name: Cusip
          x-order: '"5020"'
        x-go-name: Cusip
        x-order: '"5020"'
      - name: isin
        in: query
        description: Filter by isin code
        required: false
        style: form
        explode: true
        schema:
          type: string
          x-go-name: Isin
          x-order: '"5030"'
        x-go-name: Isin
        x-order: '"5030"'
      - name: composite_figi
        in: query
        description: Filter by composite figi code
        required: false
        style: form
        explode: true
        schema:
          type: string
          x-go-name: CompositeFigi
          x-order: '"5040"'
        x-go-name: CompositeFigi
        x-order: '"5040"'
      - name: share_figi
        in: query
        description: Filter by share class figi code
        required: false
        style: form
        explode: true
        schema:
          type: string
          x-go-name: ShareFigi
          x-order: '"5050"'
        x-go-name: ShareFigi
        x-order: '"5050"'
      - name: lei
        in: query
        description: Filter by lei code
        required: false
        style: form
        explode: true
        schema:
          type: string
          x-go-name: Lei
          x-order: '"5060"'
        x-go-name: Lei
        x-order: '"5060"'
      - name: ticker
        in: query
        description: Filter by ticker symbol
        required: false
        style: form
        explode: true
        schema:
          type: string
          x-go-name: Ticker
        x-go-name: Ticker
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PriceResponseBody'
            application/xml:
              schema:
                $ref: '#/components/schemas/PriceResponseBody'
      security:
      - api_key: []
      x-beta: "true"
      x-group: _hidden
      x-order: "50"
components:
  schemas:
    ApiCalls:
      required:
      - limit
      - usage
      type: object
      properties:
        limit:
          type: integer
          description: Quota limit
          format: int32
          example: 1000
          x-go-name: Limit
        usage:
          type: integer
          description: Quota usage
          format: int32
          example: 10
          x-go-name: Usage
      example:
        usage: 10
        limit: 1000
      x-go-package: gitlab.atlasgroup.ai/finazon/api/model/entity
    ApiUsageItem:
      required:
      - product
      type: object
      properties:
        api_calls:
          $ref: '#/components/schemas/ApiCalls'
        api_calls_price:
          $ref: '#/components/schemas/ApiCalls'
        api_calls_reference:
          $ref: '#/components/schemas/ApiCalls'
        api_calls_snapshots:
          $ref: '#/components/schemas/ApiCalls'
        api_calls_time_series:
          $ref: '#/components/schemas/ApiCalls'
        api_calls_trades:
          $ref: '#/components/schemas/ApiCalls'
        historical_api_calls:
          $ref: '#/components/schemas/ApiCalls'
        product:
          type: string
          description: Product
          example: sip
          x-go-name: Product
      example:
        product: sip
        api_calls_trades: null
        api_calls_snapshots: null
        historical_api_calls: null
        api_calls_price: null
        api_calls:
          usage: 10
          limit: 1000
        api_calls_time_series: null
        api_calls_reference: null
      x-go-package: gitlab.atlasgroup.ai/finazon/api/model/entity
    ApiUsageResponseBody:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/ApiUsageItem'
          x-go-name: Data
      example:
        data:
        - product: sip
          api_calls_trades: null
          api_calls_snapshots: null
          historical_api_calls: null
          api_calls_price: null
          api_calls:
            usage: 10
            limit: 1000
          api_calls_time_series: null
          api_calls_reference: null
        - product: sip
          api_calls_trades: null
          api_calls_snapshots: null
          historical_api_calls: null
          api_calls_price: null
          api_calls:
            usage: 10
            limit: 1000
          api_calls_time_series: null
          api_calls_reference: null
      x-go-package: gitlab.atlasgroup.ai/finazon/api/route/description
    BaseResponseBody:
      type: object
      properties:
        status:
          type: string
          description: |-
            Response status.
            One of next values:
            ok,
            error
          example: ok
          x-go-name: Status
      x-go-package: gitlab.atlasgroup.ai/finazon/api/route/description
    BenzingaDividendsCalendarResponseBody:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/DividendsCalendarItem'
          x-go-name: Data
      example:
        data:
        - dividend_type: Cash
          ticker: AAPL
          notes: notes
          record_date: 2023-05-14
          ex_dividend_date: 2023-05-11
          importance: 5
          mic: XNGS
          frequency: 4
          payable_date: 2023-05-17
          declaration_date: 2023-05-03
          record_id: 6454253aded99400013f6121
          end_regular_dividend: false
          dividend_prior: "0"
          name: Apple
          dividend: 0.24
          currency: USD
          dividend_yield: 0.00573305
          updated: 1683236210
        - dividend_type: Cash
          ticker: AAPL
          notes: notes
          record_date: 2023-05-14
          ex_dividend_date: 2023-05-11
          importance: 5
          mic: XNGS
          frequency: 4
          payable_date: 2023-05-17
          declaration_date: 2023-05-03
          record_id: 6454253aded99400013f6121
          end_regular_dividend: false
          dividend_prior: "0"
          name: Apple
          dividend: 0.24
          currency: USD
          dividend_yield: 0.00573305
          updated: 1683236210
      x-go-package: gitlab.atlasgroup.ai/finazon/api/route/description
    BenzingaEarningsCalendarResponseBody:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/EarningsCalendarItem'
          x-go-name: Data
      example:
        data:
        - date: 2023-05-04
          period: Q2
          ticker: AAPL
          notes: notes
          importance: 5
          mic: XNGS
          eps:
            surprise: 0.09
            prior: 1.52
            estimated: 1.43
            reported: 1.52
            surprise_percent: 0.0629
            type: GAAP
          record_id: "32515085"
          revenue:
            surprise: 1876000000
            prior: 97278000000
            estimated: 92960000000
            reported: 94836000000
            surprise_percent: 0.0202
            type: GAAP
          period_year: 2023
          name: Apple
          currency: USD
          date_confirmed: true
          time: "45000"
          updated: 1683232340
        - date: 2023-05-04
          period: Q2
          ticker: AAPL
          notes: notes
          importance: 5
          mic: XNGS
          eps:
            surprise: 0.09
            prior: 1.52
            estimated: 1.43
            reported: 1.52
            surprise_percent: 0.0629
            type: GAAP
          record_id: "32515085"
          revenue:
            surprise: 1876000000
            prior: 97278000000
            estimated: 92960000000
            reported: 94836000000
            surprise_percent: 0.0202
            type: GAAP
          period_year: 2023
          name: Apple
          currency: USD
          date_confirmed: true
          time: "45000"
          updated: 1683232340
      x-go-package: gitlab.atlasgroup.ai/finazon/api/route/description
    BenzingaIPOResponseBody:
      type: object
      properties:
        ipos:
          type: array
          items:
            $ref: '#/components/schemas/IPOItem'
          x-go-name: Data
      example:
        ipos:
        - date: 2023-12-31
          ipo_type: Ordinary Shares
          notes: Some notes
          mic: NYSE
          price_open: 0.0
          shares_outstanding: 0.0
          description: "Knowlton Development Corporation, Inc are a trusted global\
            \ provider of value-added solutions"
          price_public_offering: 0.0
          price_min: 13.0
          sic: 73272.0
          market_cap_at_offer: 0.0
          offering_shares: 57143000
          open_date_verified: false
          lead_underwriters:
          - Goldman Sachs
          - JP Morgan
          currency: USD
          pricing_date: 2021-09-21
          initial_filing_date: 2021-07-11
          last_yr_revenue: 0.0
          deal_status: Amendment
          ticker: KDC
          sec_filing_url: https://www.sec.gov/Archives/edgar/data/1846055/000119312521272107/d39510ds1a.htm
          underwriter_quiet_expiration_days: 40
          insider_lockup_date: 2022-03-22
          offering_shares_ord_adr: 0.0
          sec_accession_number: 0001193125-21-259499
          last_yr_income_year: 0.0
          offering_value: 800002000
          other_underwriters: "[\"Early Bird Capital\", \"Guggenheim\",]"
          record_id: 60ecd9bfc453830001d4ce72
          spac_converted_to_target: false
          underwriter_quiet_expiration_date: 2021-11-02
          name: "Knowlton Development Corporation, Inc"
          last_yr_revenue_year: 0.0
          last_yr_income: 0.0
          time: "54575"
          state_location: MA
          updated: 1683232340
          ord_shares_out_after_offer: 0.0
          price_max: 15.0
          insider_lockup_days: 180
        - date: 2023-12-31
          ipo_type: Ordinary Shares
          notes: Some notes
          mic: NYSE
          price_open: 0.0
          shares_outstanding: 0.0
          description: "Knowlton Development Corporation, Inc are a trusted global\
            \ provider of value-added solutions"
          price_public_offering: 0.0
          price_min: 13.0
          sic: 73272.0
          market_cap_at_offer: 0.0
          offering_shares: 57143000
          open_date_verified: false
          lead_underwriters:
          - Goldman Sachs
          - JP Morgan
          currency: USD
          pricing_date: 2021-09-21
          initial_filing_date: 2021-07-11
          last_yr_revenue: 0.0
          deal_status: Amendment
          ticker: KDC
          sec_filing_url: https://www.sec.gov/Archives/edgar/data/1846055/000119312521272107/d39510ds1a.htm
          underwriter_quiet_expiration_days: 40
          insider_lockup_date: 2022-03-22
          offering_shares_ord_adr: 0.0
          sec_accession_number: 0001193125-21-259499
          last_yr_income_year: 0.0
          offering_value: 800002000
          other_underwriters: "[\"Early Bird Capital\", \"Guggenheim\",]"
          record_id: 60ecd9bfc453830001d4ce72
          spac_converted_to_target: false
          underwriter_quiet_expiration_date: 2021-11-02
          name: "Knowlton Development Corporation, Inc"
          last_yr_revenue_year: 0.0
          last_yr_income: 0.0
          time: "54575"
          state_location: MA
          updated: 1683232340
          ord_shares_out_after_offer: 0.0
          price_max: 15.0
          insider_lockup_days: 180
      x-go-package: gitlab.atlasgroup.ai/finazon/api/route/description
    BenzingaNewsResponseBody:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/NewsItem'
          x-go-name: Data
      example:
        data:
        - record_id: 32911851
          images:
          - https://cdn.benzinga.com/files/imagecache/1024x768xUP/images/story/2023/05/02/ford_-_logo_0.jpg
          channels:
          - Economics
          updated_at: 2023-06-19T14:14:30Z
          author: Ananya Gairola
          created_at: 2023-06-19T14:14:29Z
          title: "iPhone 15,16 Could Unleash Enhanced Connectivity, Performance, Says\
            \ Apple Analyst Ming-Chi Kuo"
          tickers:
          - AAPL
          url: https://www.benzinga.com/news/23/06/32911851/iphone-15-16-could-unleash-enhanced-connectivity-performance-says-apple-analyst-ming-chi-kuo
          tags:
          - OpenAi
        - record_id: 32911851
          images:
          - https://cdn.benzinga.com/files/imagecache/1024x768xUP/images/story/2023/05/02/ford_-_logo_0.jpg
          channels:
          - Economics
          updated_at: 2023-06-19T14:14:30Z
          author: Ananya Gairola
          created_at: 2023-06-19T14:14:29Z
          title: "iPhone 15,16 Could Unleash Enhanced Connectivity, Performance, Says\
            \ Apple Analyst Ming-Chi Kuo"
          tickers:
          - AAPL
          url: https://www.benzinga.com/news/23/06/32911851/iphone-15-16-could-unleash-enhanced-connectivity-performance-says-apple-analyst-ming-chi-kuo
          tags:
          - OpenAi
      x-go-package: gitlab.atlasgroup.ai/finazon/api/route/description
    DatasetDetailItem:
      type: object
      properties:
        title:
          type: string
          description: Dataset detail info title
          example: API requests
          x-go-name: Title
        value:
          type: string
          description: Dataset detail info value
          example: 30 per minute
          x-go-name: Value
      description: DatasetDetailItem represent a detail item for dataset
      example:
        title: API requests
        value: 30 per minute
      x-go-package: gitlab.atlasgroup.ai/finazon/api/model/service
    DatasetItem:
      type: object
      properties:
        code:
          type: string
          description: Finazon code representing the dataset
          example: binance
          x-go-name: Code
        name:
          type: string
          description: The official name of the dataset
          example: Binance Market Data API
          x-go-name: Name
      description: DatasetItem represent a dataset
      x-go-package: gitlab.atlasgroup.ai/finazon/api/controller
    DatasetsResponseBody:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/MyDatasetItem'
          x-go-name: Data
      example:
        data:
        - finish_at: 1709143013
          next_renewal: 1709143013
          code: crypto
          price_period: monthly
          name: Crypto Aggregated API
          details:
          - title: API requests
            value: 30 per minute
          - title: API requests
            value: 30 per minute
          start_at: 1692098753
          active_until: 1709143013
          price_total: 5.0
          status: active
        - finish_at: 1709143013
          next_renewal: 1709143013
          code: crypto
          price_period: monthly
          name: Crypto Aggregated API
          details:
          - title: API requests
            value: 30 per minute
          - title: API requests
            value: 30 per minute
          start_at: 1692098753
          active_until: 1709143013
          price_total: 5.0
          status: active
      x-go-package: gitlab.atlasgroup.ai/finazon/api/controller/personal
    DividendsCalendarItem:
      type: object
      properties:
        currency:
          type: string
          description: The currency code of the security according to the ISO 4217
            standard
          example: USD
          x-go-name: Currency
        declaration_date:
          type: string
          description: Date of declaration
          example: 2023-05-03
          x-go-name: DeclarationDate
        dividend:
          type: number
          description: Dividend amount per share
          format: double
          example: 0.24
          x-go-name: Dividend
        dividend_prior:
          type: string
          description: Dividend that was issued prior
          example: "0"
          x-go-name: DividendPrior
        dividend_type:
          type: string
          description: Type of issuance (Cash or Stock)
          example: Cash
          x-go-name: DividendType
        dividend_yield:
          type: number
          description: Dividend expressed as a percentage of a current share price
          format: double
          example: 0.00573305
          x-go-name: DividendYield
        end_regular_dividend:
          type: boolean
          description: End regular dividend
          example: false
          x-go-name: EndRegularDividend
        ex_dividend_date:
          type: string
          description: Date of the ex-dividend
          example: 2023-05-11
          x-go-name: ExDividendDate
        frequency:
          type: integer
          description: Frequency of annual dividend distribution (4 signifies quarterly
            payments)
          format: int64
          example: 4
          x-go-name: Frequency
        importance:
          type: integer
          description: Significance of the event
          format: int64
          example: 5
          x-go-name: Importance
        mic:
          type: string
          description: Market identifier code (MIC) under ISO 10383 standard
          example: XNGS
          x-go-name: Mic
        name:
          type: string
          description: Full name of the instrument
          example: Apple
          x-go-name: Name
        notes:
          type: string
          description: Notes
          x-go-name: Notes
        payable_date:
          type: string
          description: Date of the payable dividend
          example: 2023-05-17
          x-go-name: PayableDate
        record_date:
          type: string
          description: Date of the record date
          example: 2023-05-14
          x-go-name: RecordDate
        record_id:
          type: string
          description: Unique record ID from Benzinga
          example: 6454253aded99400013f6121
          x-go-name: RecordId
        ticker:
          type: string
          description: Ticker symbol of the instrument
          example: AAPL
          x-go-name: Ticker
        updated:
          type: integer
          description: Last updated timestamp (UNIX)
          format: int64
          example: 1683236210
          x-go-name: Updated
      description: DividendsCalendarItem represents a dividends calendar item from
        Benzinga
      example:
        dividend_type: Cash
        ticker: AAPL
        notes: notes
        record_date: 2023-05-14
        ex_dividend_date: 2023-05-11
        importance: 5
        mic: XNGS
        frequency: 4
        payable_date: 2023-05-17
        declaration_date: 2023-05-03
        record_id: 6454253aded99400013f6121
        end_regular_dividend: false
        dividend_prior: "0"
        name: Apple
        dividend: 0.24
        currency: USD
        dividend_yield: 0.00573305
        updated: 1683236210
      x-go-package: gitlab.atlasgroup.ai/finazon/api/model/benzinga_dp
    EarningsCalendarItem:
      type: object
      properties:
        currency:
          type: string
          description: The currency code of the security according to the ISO 4217
            standard
          example: USD
          x-go-name: Currency
        date:
          type: string
          description: Date when earnings are disbursed
          example: 2023-05-04
          x-go-name: Date
        date_confirmed:
          type: boolean
          description: Indicates if the predicted date has been verified by the company
          example: true
          x-go-name: DateConfirmed
        eps:
          $ref: '#/components/schemas/EarningsCalendarItem_eps'
        importance:
          type: integer
          description: Significance of the event
          format: int64
          example: 5
          x-go-name: Importance
        mic:
          type: string
          description: Market identifier code (MIC) under ISO 10383 standard
          example: XNGS
          x-go-name: Mic
        name:
          type: string
          description: Full name of the instrument
          example: Apple
          x-go-name: Name
        notes:
          type: string
          description: Notes
          x-go-name: Notes
        period:
          type: string
          description: Fiscal period being reported
          example: Q2
          enum:
          - Q1
          - Q2
          - Q3
          - Q4
          - FY
          - H1
          - H2
          x-go-name: Period
        period_year:
          type: integer
          description: Fiscal year being reported
          format: int64
          example: 2023
          x-go-name: PeriodYear
        record_id:
          type: string
          description: Unique record ID from Benzinga
          example: "32515085"
          x-go-name: RecordId
        revenue:
          $ref: '#/components/schemas/EarningsCalendarItem_revenue'
        ticker:
          type: string
          description: Ticker symbol of the instrument
          example: AAPL
          x-go-name: Ticker
        time:
          type: string
          description: Time when earnings are disbursed
          example: "45000"
          x-go-name: Time
        updated:
          type: integer
          description: Last updated timestamp (UNIX)
          format: int64
          example: 1683232340
          x-go-name: Updated
      description: EarningsCalendarItem represents an earnings calendar item
      example:
        date: 2023-05-04
        period: Q2
        ticker: AAPL
        notes: notes
        importance: 5
        mic: XNGS
        eps:
          surprise: 0.09
          prior: 1.52
          estimated: 1.43
          reported: 1.52
          surprise_percent: 0.0629
          type: GAAP
        record_id: "32515085"
        revenue:
          surprise: 1876000000
          prior: 97278000000
          estimated: 92960000000
          reported: 94836000000
          surprise_percent: 0.0202
          type: GAAP
        period_year: 2023
        name: Apple
        currency: USD
        date_confirmed: true
        time: "45000"
        updated: 1683232340
      x-go-package: gitlab.atlasgroup.ai/finazon/api/model/benzinga_dp
    ExchangeCryptoItem:
      type: object
      properties:
        code:
          type: string
          description: Finazon's identification code for the exchange
          example: crypto_binance
          x-go-name: Code
        name:
          type: string
          description: Official name of the cryptocurrency exchange
          example: Binance
          x-go-name: Name
      description: ExchangeCryptoItem represents a cryptocurrency exchange
      example:
        code: crypto_binance
        name: Binance
      x-go-package: gitlab.atlasgroup.ai/finazon/api/route/description
    ExchangeStocksItem:
      type: object
      properties:
        country:
          type: string
          description: ISO 3166 alpha-2 country code
          example: US
          x-go-name: Country
        mic:
          type: string
          description: Market identifier code (MIC) under ISO 10383 standard
          example: XNGS
          x-go-name: Mic
        name:
          type: string
          description: Official name of the stock market
          example: Nasdaq XNGS
          x-go-name: Name
      description: ExchangeStocksItem represent a stock market
      example:
        country: US
        mic: XNGS
        name: Nasdaq XNGS
      x-go-package: gitlab.atlasgroup.ai/finazon/api/route/description
    ExchangesCryptoResponseBody:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/ExchangeCryptoItem'
          x-go-name: Data
      example:
        data:
        - code: crypto_binance
          name: Binance
        - code: crypto_binance
          name: Binance
      x-go-package: gitlab.atlasgroup.ai/finazon/api/route/description
    ExchangesStocksResponseBody:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/ExchangeStocksItem'
          x-go-name: Data
      example:
        data:
        - country: US
          mic: XNGS
          name: Nasdaq XNGS
        - country: US
          mic: XNGS
          name: Nasdaq XNGS
      x-go-package: gitlab.atlasgroup.ai/finazon/api/route/description
    Filing:
      type: object
      properties:
        cik:
          type: integer
          description: CIK code
          format: int64
          example: 930667
          x-go-name: Cik
        filed_at:
          type: integer
          description: Filing date in UNIX timestamp
          format: int64
          example: 1691491243
          x-go-name: FiledAt
        files:
          type: array
          description: Filing files
          items:
            $ref: '#/components/schemas/FilingFile'
          x-go-name: Files
        filing_url:
          type: string
          description: Full URL of the filing
          example: https://www.sec.gov/Archives/edgar/data/320193/0001140361-23-023909-index.htm
          x-go-name: FilingUrl
        form_type:
          type: string
          description: Filing form type
          example: 13F-HR
          x-go-name: FormType
        ticker:
          type: array
          description: List of tickers
          example:
          - AAPL
          items:
            type: string
          x-go-name: Ticker
      description: Filing represent the filing
      example:
        ticker:
        - AAPL
        cik: 930667
        filed_at: 1691491243
        filing_url: https://www.sec.gov/Archives/edgar/data/320193/0001140361-23-023909-index.htm
        files:
        - size: 2913
          name: primary_doc.html
          type: "4"
          url: https://www.sec.gov/Archives/edgar/data/320193/000197314123000171/primary_doc.xml
        - size: 2913
          name: primary_doc.html
          type: "4"
          url: https://www.sec.gov/Archives/edgar/data/320193/000197314123000171/primary_doc.xml
        form_type: 13F-HR
      x-go-package: gitlab.atlasgroup.ai/finazon/api/model/entity
    FilingFile:
      type: object
      properties:
        name:
          type: string
          description: File name
          example: primary_doc.html
          x-go-name: Name
        size:
          type: integer
          description: File size
          format: int32
          example: 2913
          x-go-name: Size
        type:
          type: string
          description: File type
          example: "4"
          x-go-name: Type
        url:
          type: string
          description: File full url
          example: https://www.sec.gov/Archives/edgar/data/320193/000197314123000171/primary_doc.xml
          x-go-name: Url
      description: FilingFile form type
      example:
        size: 2913
        name: primary_doc.html
        type: "4"
        url: https://www.sec.gov/Archives/edgar/data/320193/000197314123000171/primary_doc.xml
      x-go-package: gitlab.atlasgroup.ai/finazon/api/model/entity
    IPOItem:
      type: object
      properties:
        currency:
          type: string
          description: The currency code of the security according to the ISO 4217
            standard
          example: USD
          x-go-name: Currency
        date:
          type: string
          description: Date when earnings are disbursed
          example: 2023-12-31
          x-go-name: Date
        deal_status:
          type: string
          description: Activity tracked for the IPO status
          example: Amendment
          x-go-name: DealStatus
        description:
          type: string
          description: Description
          example: "Knowlton Development Corporation, Inc are a trusted global provider\
            \ of value-added solutions"
          x-go-name: Description
        initial_filing_date:
          type: string
          description: Initial filing date
          example: 2021-07-11
          x-go-name: InitialFilingDate
        insider_lockup_date:
          type: string
          description: Date range that represents the insider lock up period
          example: 2022-03-22
          x-go-name: InsiderLockupDate
        insider_lockup_days:
          type: integer
          description: Amount of days for the insider lockup period
          format: int64
          example: 180
          x-go-name: InsiderLockupDays
        ipo_type:
          type: string
          description: IPO type
          example: Ordinary Shares
          x-go-name: IpoType
        last_yr_income:
          type: number
          description: Last year income
          format: double
          example: 0.0
          x-go-name: LastYrIncome
        last_yr_income_year:
          type: number
          description: Last year income
          format: double
          example: 0.0
          x-go-name: LastYrIncomeYear
        last_yr_revenue:
          type: number
          description: Last year revenue
          format: double
          example: 0.0
          x-go-name: LastYrRevenue
        last_yr_revenue_year:
          type: number
          description: Last year revenue
          format: double
          example: 0.0
          x-go-name: LastYrRevenueYear
        lead_underwriters:
          type: array
          description: Firm that lead the underwriting process
          example:
          - Goldman Sachs
          - JP Morgan
          items:
            type: string
          x-go-name: LeadUnderwriters
        market_cap_at_offer:
          type: number
          description: Market cap at offer
          format: double
          example: 0.0
          x-go-name: MarketCapAtOffer
        mic:
          type: string
          description: Market identifier code (MIC) under ISO 10383 standard
          example: NYSE
          x-go-name: Mic
        name:
          type: string
          description: Full name of the instrument
          example: "Knowlton Development Corporation, Inc"
          x-go-name: Name
        notes:
          type: string
          description: Notes
          example: Some notes
          x-go-name: Notes
        offering_shares:
          type: number
          description: Amount of shares being offered
          format: double
          example: 57143000
          x-go-name: OfferingShares
        offering_shares_ord_adr:
          type: number
          description: Amount of ordinary shares being offered
          format: double
          example: 0.0
          x-go-name: OfferingSharesOrdAdr
        offering_value:
          type: number
          description: Number of shares being offered x price per share
          format: double
          example: 800002000
          x-go-name: OfferingValue
        open_date_verified:
          type: boolean
          description: Indicates if the predicted date has been verified by the company
          example: false
          x-go-name: OpenDateVerified
        ord_shares_out_after_offer:
          type: number
          description: Ordinary shares out after offer
          format: double
          example: 0.0
          x-go-name: OrdSharesOutAfterOffer
        other_underwriters:
          type: array
          description: Additional firms that were a part of the underwriting
          example: "[\"Early Bird Capital\", \"Guggenheim\",]"
          items:
            type: string
          x-go-name: OtherUnderwriters
        price_max:
          type: number
          description: Maximum projected IPO price range
          format: double
          example: 15.0
          x-go-name: PriceMax
        price_min:
          type: number
          description: Minimum  projected IPO price range
          format: double
          example: 13.0
          x-go-name: PriceMin
        price_open:
          type: number
          description: The opening price at the beginning of the first trading day
            (only available for priced IPOs)
          format: double
          example: 0.0
          x-go-name: PriceOpen
        price_public_offering:
          type: number
          description: Public offering price
          format: double
          example: 0.0
          x-go-name: PricePublicOffering
        pricing_date:
          type: string
          description: Pricing date
          example: 2021-09-21
          x-go-name: PricingDate
        record_id:
          type: string
          description: Unique record ID from Benzinga
          example: 60ecd9bfc453830001d4ce72
          x-go-name: RecordId
        sec_accession_number:
          type: string
          description: SEC accession number
          example: 0001193125-21-259499
          x-go-name: SecAccessionNumber
        sec_filing_url:
          type: string
          description: "The IRL to the company's S-1, S-1/A, F-1, or F-1/A SEC filing,\
            \ which is required to be filed before an IPO takes place."
          example: https://www.sec.gov/Archives/edgar/data/1846055/000119312521272107/d39510ds1a.htm
          x-go-name: SecFilingUrl
        shares_outstanding:
          type: number
          description: Outstanding shares
          format: double
          example: 0.0
          x-go-name: SharesOutstanding
        sic:
          type: number
          description: SIC
          format: double
          example: 73272.0
          x-go-name: Sic
        spac_converted_to_target:
          type: boolean
          description: ISs Spac converted to target
          example: false
          x-go-name: SpacConvertedToTarget
        state_location:
          type: string
          description: State location
          example: MA
          x-go-name: StateLocation
        ticker:
          type: string
          description: Ticker symbol of the instrument
          example: KDC
          x-go-name: Ticker
        time:
          type: string
          description: Time when earnings are disbursed
          example: "54575"
          x-go-name: Time
        underwriter_quiet_expiration_date:
          type: string
          description: Date of expiration for the underwriter quiet period
          example: 2021-11-02
          x-go-name: UnderwriterQuietExpirationDate
        underwriter_quiet_expiration_days:
          type: integer
          description: Days of expiration for the underwriter quiet period
          format: int64
          example: 40
          x-go-name: UnderwriterQuietExpirationDays
        updated:
          type: integer
          description: Last updated timestamp (UNIX)
          format: int64
          example: 1683232340
          x-go-name: Updated
      description: IPOItem represents an IPO item
      example:
        date: 2023-12-31
        ipo_type: Ordinary Shares
        notes: Some notes
        mic: NYSE
        price_open: 0.0
        shares_outstanding: 0.0
        description: "Knowlton Development Corporation, Inc are a trusted global provider\
          \ of value-added solutions"
        price_public_offering: 0.0
        price_min: 13.0
        sic: 73272.0
        market_cap_at_offer: 0.0
        offering_shares: 57143000
        open_date_verified: false
        lead_underwriters:
        - Goldman Sachs
        - JP Morgan
        currency: USD
        pricing_date: 2021-09-21
        initial_filing_date: 2021-07-11
        last_yr_revenue: 0.0
        deal_status: Amendment
        ticker: KDC
        sec_filing_url: https://www.sec.gov/Archives/edgar/data/1846055/000119312521272107/d39510ds1a.htm
        underwriter_quiet_expiration_days: 40
        insider_lockup_date: 2022-03-22
        offering_shares_ord_adr: 0.0
        sec_accession_number: 0001193125-21-259499
        last_yr_income_year: 0.0
        offering_value: 800002000
        other_underwriters: "[\"Early Bird Capital\", \"Guggenheim\",]"
        record_id: 60ecd9bfc453830001d4ce72
        spac_converted_to_target: false
        underwriter_quiet_expiration_date: 2021-11-02
        name: "Knowlton Development Corporation, Inc"
        last_yr_revenue_year: 0.0
        last_yr_income: 0.0
        time: "54575"
        state_location: MA
        updated: 1683232340
        ord_shares_out_after_offer: 0.0
        price_max: 15.0
        insider_lockup_days: 180
      x-go-package: gitlab.atlasgroup.ai/finazon/api/model/benzinga_dp
    MarketCenterItem:
      required:
      - code
      - name
      type: object
      properties:
        code:
          type: string
          description: Market center code
          example: Q
          x-go-name: Code
        name:
          type: string
          description: Market center name
          example: "The NASDAQ Stock Market, LLC"
          x-go-name: Name
      example:
        code: Q
        name: "The NASDAQ Stock Market, LLC"
      x-go-package: gitlab.atlasgroup.ai/finazon/api/model/entity
    MarketCenterResponseBody:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/MarketCenterItem'
          x-go-name: Data
      example:
        data:
        - code: Q
          name: "The NASDAQ Stock Market, LLC"
        - code: Q
          name: "The NASDAQ Stock Market, LLC"
      x-go-package: gitlab.atlasgroup.ai/finazon/api/route/description
    Meta:
      type: object
      properties:
        pagination:
          $ref: '#/components/schemas/PaginationMeta'
      description: Request general information
      example:
        pagination:
          per_page: 100
          page: 1
      x-go-package: gitlab.atlasgroup.ai/finazon/api/route/description
    MyDatasetItem:
      type: object
      properties:
        active_until:
          type: integer
          description: Dataset subscription active until date
          format: int64
          example: 1709143013
          x-go-name: ActiveUntil
        code:
          type: string
          description: Dataset alias
          example: crypto
          x-go-name: Code
        details:
          type: array
          items:
            $ref: '#/components/schemas/DatasetDetailItem'
          x-go-name: Details
        finish_at:
          type: integer
          description: Dataset finish subscription date
          format: int64
          example: 1709143013
          x-go-name: FinishedAt
        name:
          type: string
          description: Dataset name
          example: Crypto Aggregated API
          x-go-name: Name
        next_renewal:
          type: integer
          description: Dataset subscription next renewal date
          format: int64
          example: 1709143013
          x-go-name: NextRenewal
        price_period:
          type: string
          description: Dataset subscription price period
          example: monthly
          x-go-name: PricePeriod
        price_total:
          type: number
          description: Dataset subscription total price
          format: double
          example: 5.0
          x-go-name: PriceTotal
        start_at:
          type: integer
          description: Dataset start subscription date
          format: int64
          example: 1692098753
          x-go-name: StartedAt
        status:
          type: string
          description: Dataset status
          example: active
          enum:
          - active
          - canceled
          x-go-name: Status
      description: MyDatasetItem represent a dataset info
      example:
        finish_at: 1709143013
        next_renewal: 1709143013
        code: crypto
        price_period: monthly
        name: Crypto Aggregated API
        details:
        - title: API requests
          value: 30 per minute
        - title: API requests
          value: 30 per minute
        start_at: 1692098753
        active_until: 1709143013
        price_total: 5.0
        status: active
      x-go-package: gitlab.atlasgroup.ai/finazon/api/model/service
    NewsItem:
      type: object
      properties:
        author:
          type: string
          description: Author of the news article
          example: Ananya Gairola
          x-go-name: Author
        channels:
          type: array
          description: Channels of the news article
          example:
          - Economics
          items:
            type: string
          x-go-name: Channels
        created_at:
          type: string
          description: Timestamp indicating when the news article was generated
          format: date-time
          example: 2023-06-19T14:14:29Z
          x-go-name: CreatedAt
        images:
          type: array
          description: Images of the news article
          example:
          - https://cdn.benzinga.com/files/imagecache/1024x768xUP/images/story/2023/05/02/ford_-_logo_0.jpg
          items:
            type: string
          x-go-name: Images
        record_id:
          type: integer
          description: Unique record ID from Benzinga
          format: int64
          example: 32911851
          x-go-name: RecordId
        tags:
          type: array
          description: Tags of the news article
          example:
          - OpenAi
          items:
            type: string
          x-go-name: Tags
        tickers:
          type: array
          description: The ticker symbols related to the news article
          example:
          - AAPL
          items:
            type: string
          x-go-name: Tickers
        title:
          type: string
          description: Title of the news article
          example: "iPhone 15,16 Could Unleash Enhanced Connectivity, Performance,\
            \ Says Apple Analyst Ming-Chi Kuo"
          x-go-name: Title
        updated_at:
          type: string
          description: Timestamp indicating when the news article was last updated
          format: date-time
          example: 2023-06-19T14:14:30Z
          x-go-name: UpdatedAt
        url:
          type: string
          description: URL link directing to the complete news story
          example: https://www.benzinga.com/news/23/06/32911851/iphone-15-16-could-unleash-enhanced-connectivity-performance-says-apple-analyst-ming-chi-kuo
          x-go-name: Url
      description: NewsItem represent the news item from Benzinga
      example:
        record_id: 32911851
        images:
        - https://cdn.benzinga.com/files/imagecache/1024x768xUP/images/story/2023/05/02/ford_-_logo_0.jpg
        channels:
        - Economics
        updated_at: 2023-06-19T14:14:30Z
        author: Ananya Gairola
        created_at: 2023-06-19T14:14:29Z
        title: "iPhone 15,16 Could Unleash Enhanced Connectivity, Performance, Says\
          \ Apple Analyst Ming-Chi Kuo"
        tickers:
        - AAPL
        url: https://www.benzinga.com/news/23/06/32911851/iphone-15-16-could-unleash-enhanced-connectivity-performance-says-apple-analyst-ming-chi-kuo
        tags:
        - OpenAi
      x-go-package: gitlab.atlasgroup.ai/finazon/api/model/benzinga_dp
    PaginationMeta:
      type: object
      properties:
        page:
          type: integer
          description: Current page of result
          format: int64
          example: 1
          x-go-name: Page
        per_page:
          type: integer
          description: Number of items displayed per page
          format: int64
          example: 100
          x-go-name: PerPage
      description: Pagination information
      example:
        per_page: 100
        page: 1
      x-go-package: gitlab.atlasgroup.ai/finazon/api/route/description
    PriceResponseBody:
      type: object
      properties:
        p:
          type: number
          description: Price at which the trade occurred
          format: double
          example: 184.95
          x-go-name: P
      example:
        p: 184.95
      x-go-package: gitlab.atlasgroup.ai/finazon/api/route/description
    PublisherItem:
      type: object
      properties:
        code:
          type: string
          description: Finazon code representing the publisher
          example: sip
          x-go-name: Code
        name:
          type: string
          description: The official name of the data publisher
          example: SIP
          x-go-name: Name
      description: PublisherItem represent a data publisher
      example:
        code: sip
        name: SIP
      x-go-package: gitlab.atlasgroup.ai/finazon/api/route/description
    PublishersResponseBody:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/PublisherItem'
          x-go-name: Data
      example:
        data:
        - code: sip
          name: SIP
        - code: sip
          name: SIP
      x-go-package: gitlab.atlasgroup.ai/finazon/api/route/description
    QuoteBinanceItem:
      type: object
      properties:
        t:
          type: integer
          description: Timestamp indicating when the trading interval opened
          format: int64
          example: 1675256340
          x-go-name: T
          x-order: "10"
        o:
          type: number
          description: Price at the opening of the trading interval
          format: double
          example: 145.35001
          x-go-name: O
          x-order: "20"
        h:
          type: number
          description: Highest price reached during the trading interval
          format: double
          example: 145.49001
          x-go-name: H
          x-order: "30"
        l:
          type: number
          description: Lowest price reached during the trading interval
          format: double
          example: 145.13
          x-go-name: L
          x-order: "40"
        c:
          type: number
          description: Closing price at the end of the trading interval
          format: double
          example: 145.46001
          x-go-name: C
          x-order: "50"
        tr:
          type: number
          description: Trades
          format: double
          example: 123.0
          x-go-name: TR
          x-order: "60"
        bv:
          type: number
          description: Trading base volume recorded during the trading interval
          format: double
          example: 97.598074
          x-go-name: BV
          x-order: "70"
        qv:
          type: number
          description: Trading quote volume recorded during the trading interval
          format: double
          example: 97.598074
          x-go-name: QV
          x-order: "80"
        tbv:
          type: number
          description: Taker buy base asset volume recorded during the trading interval
          format: double
          example: 97.598074
          x-go-name: TBV
          x-order: "90"
        tqv:
          type: number
          description: Taker buy quote asset volume recorded during the trading interval
          format: double
          example: 97.598074
          x-go-name: TQV
          x-order: "100"
      example:
        c: 145.46001
        t: 1675256340
        bv: 97.598074
        qv: 97.598074
        h: 145.49001
        tqv: 97.598074
        tbv: 97.598074
        l: 145.13
        tr: 123.0
        o: 145.35001
      x-go-package: gitlab.atlasgroup.ai/finazon/api/route/description
    QuoteForexItem:
      type: object
      properties:
        t:
          type: integer
          description: Timestamp indicating when the trading interval opened
          format: int64
          example: 1675256340
          x-go-name: T
          x-order: "10"
        o:
          type: number
          description: Price at the opening of the trading interval
          format: double
          example: 145.35001
          x-go-name: O
          x-order: "20"
        h:
          type: number
          description: Highest price reached during the trading interval
          format: double
          example: 145.49001
          x-go-name: H
          x-order: "30"
        l:
          type: number
          description: Lowest price reached during the trading interval
          format: double
          example: 145.13
          x-go-name: L
          x-order: "40"
        c:
          type: number
          description: Closing price at the end of the trading interval
          format: double
          example: 145.46001
          x-go-name: C
          x-order: "50"
      description: QuoteForexItem represents a bar quote at the trading interval
      example:
        c: 145.46001
        t: 1675256340
        h: 145.49001
        l: 145.13
        o: 145.35001
      x-go-package: gitlab.atlasgroup.ai/finazon/api/route/description
    QuoteItem:
      type: object
      properties:
        t:
          type: integer
          description: Timestamp indicating when the trading interval opened
          format: int64
          example: 1675256340
          x-go-name: T
          x-order: "10"
        o:
          type: number
          description: Price at the opening of the trading interval
          format: double
          example: 145.35001
          x-go-name: O
          x-order: "20"
        h:
          type: number
          description: Highest price reached during the trading interval
          format: double
          example: 145.49001
          x-go-name: H
          x-order: "30"
        l:
          type: number
          description: Lowest price reached during the trading interval
          format: double
          example: 145.13
          x-go-name: L
          x-order: "40"
        c:
          type: number
          description: Closing price at the end of the trading interval
          format: double
          example: 145.46001
          x-go-name: C
          x-order: "50"
        v:
          type: number
          description: Trading volume recorded during the trading interval
          format: double
          example: 1006162.0
          x-go-name: V
          x-order: "60"
      description: QuoteItem represents a bar quote at the trading interval
      example:
        c: 145.46001
        t: 1675256340
        v: 1006162.0
        h: 145.49001
        l: 145.13
        o: 145.35001
      x-go-package: gitlab.atlasgroup.ai/finazon/api/route/description
    SipTradesItem:
      type: object
      properties:
        co:
          type: string
          description: Trade conditions indicating special information about a trade
          example: '@TI'
          x-go-name: Co
        mi:
          type: string
          description: Market center
          example: Q
          x-go-name: Mi
        p:
          type: number
          description: Price at which the trade occurred
          format: double
          example: 184.95
          x-go-name: P
        s:
          type: integer
          description: Number of shares traded
          format: int64
          example: 1
          x-go-name: S
        t:
          type: integer
          description: Timestamp of the trade in UNIX milliseconds
          format: int64
          example: 1686959999000
          x-go-name: T
        ta:
          type: string
          description: SIP tape where trade occurred
          example: CQT-UTPBIN-V2
          x-go-name: Ta
      description: SipTradesItem represents a single trade that occurred in SIP
      example:
        p: 184.95
        s: 1
        t: 1686959999000
        co: '@TI'
        mi: Q
        ta: CQT-UTPBIN-V2
      x-go-package: gitlab.atlasgroup.ai/finazon/api/route/description
    SymbolCrypto:
      required:
      - publisher
      - ticker
      type: object
      properties:
        publisher:
          type: string
          description: Publisher code
          example: binance
          x-go-name: Publisher
        ticker:
          type: string
          description: Instrument symbol (ticker)
          example: BTC/USDT
          x-go-name: Ticker
      example:
        ticker: BTC/USDT
        publisher: binance
      x-go-package: gitlab.atlasgroup.ai/finazon/api/model/entity
    SymbolForex:
      required:
      - ticker
      type: object
      properties:
        ticker:
          type: string
          description: Instrument symbol (ticker)
          example: AUD/CAD
          x-go-name: Ticker
      example:
        ticker: AUD/CAD
      x-go-package: gitlab.atlasgroup.ai/finazon/api/model/entity
    SymbolStocks:
      required:
      - country
      - currency
      - publisher
      - ticker
      type: object
      properties:
        country:
          type: string
          description: Country where exchange is located
          example: US
          x-go-name: Country
        currency:
          type: string
          description: Currency of the instrument according to the ISO 4217 standard
          example: USD
          x-go-name: Currency
        publisher:
          type: string
          description: Publisher code
          example: sip
          x-go-name: Publisher
        ticker:
          type: string
          description: Instrument symbol (ticker)
          example: AAPL
          x-go-name: Ticker
      example:
        country: US
        ticker: AAPL
        publisher: sip
        currency: USD
      x-go-package: gitlab.atlasgroup.ai/finazon/api/model/entity
    SymbolUSStocks:
      required:
      - currency
      - mic
      - ticker
      type: object
      properties:
        asset_type:
          type: string
          description: Asset type
          example: COMMON_STOCK
          x-go-name: AssetType
        cik:
          type: string
          description: CIK code
          example: "320193"
          x-go-name: Cik
        composite_figi:
          type: string
          description: FIGI Composite code
          example: BBG000B9XRY4
          x-go-name: CompositeFigi
        currency:
          type: string
          description: Currency of the instrument according to the ISO 4217 standard
          example: USD
          x-go-name: Currency
        lei:
          type: string
          description: LEI code
          example: HWUPKR0MPOU8FGXBT394
          x-go-name: Lei
        mic:
          type: string
          description: Market identifier code (MIC) under ISO 10383 standard
          example: nyse
          x-go-name: Mic
        security:
          type: string
          description: Security name
          example: Apple Inc.
          x-go-name: Security
        share_figi:
          type: string
          description: FIGI share class code
          example: BBG001S5N8V8
          x-go-name: ShareFigi
        ticker:
          type: string
          description: Instrument symbol (ticker)
          example: AAPL
          x-go-name: Ticker
      example:
        lei: HWUPKR0MPOU8FGXBT394
        security: Apple Inc.
        share_figi: BBG001S5N8V8
        ticker: AAPL
        composite_figi: BBG000B9XRY4
        cik: "320193"
        mic: nyse
        asset_type: COMMON_STOCK
        currency: USD
      x-go-package: gitlab.atlasgroup.ai/finazon/api/model/entity
    SymbolsCryptoResponseBody:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/SymbolCrypto'
          x-go-name: Data
        meta:
          $ref: '#/components/schemas/Meta'
      example:
        data:
        - ticker: BTC/USDT
          publisher: binance
        - ticker: BTC/USDT
          publisher: binance
        meta:
          pagination:
            per_page: 100
            page: 1
      x-go-package: gitlab.atlasgroup.ai/finazon/api/route/description
    SymbolsForexResponseBody:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/SymbolForex'
          x-go-name: Data
        meta:
          $ref: '#/components/schemas/Meta'
      example:
        data:
        - ticker: AUD/CAD
        - ticker: AUD/CAD
        meta:
          pagination:
            per_page: 100
            page: 1
      x-go-package: gitlab.atlasgroup.ai/finazon/api/route/description
    SymbolsStocksResponseBody:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/SymbolStocks'
          x-go-name: Data
        meta:
          $ref: '#/components/schemas/Meta'
      example:
        data:
        - country: US
          ticker: AAPL
          publisher: sip
          currency: USD
        - country: US
          ticker: AAPL
          publisher: sip
          currency: USD
        meta:
          pagination:
            per_page: 100
            page: 1
      x-go-package: gitlab.atlasgroup.ai/finazon/api/route/description
    SymbolsUSStocksResponseBody:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/SymbolUSStocks'
          x-go-name: Data
        meta:
          $ref: '#/components/schemas/Meta'
      example:
        data:
        - lei: HWUPKR0MPOU8FGXBT394
          security: Apple Inc.
          share_figi: BBG001S5N8V8
          ticker: AAPL
          composite_figi: BBG000B9XRY4
          cik: "320193"
          mic: nyse
          asset_type: COMMON_STOCK
          currency: USD
        - lei: HWUPKR0MPOU8FGXBT394
          security: Apple Inc.
          share_figi: BBG001S5N8V8
          ticker: AAPL
          composite_figi: BBG000B9XRY4
          cik: "320193"
          mic: nyse
          asset_type: COMMON_STOCK
          currency: USD
        meta:
          pagination:
            per_page: 100
            page: 1
      x-go-package: gitlab.atlasgroup.ai/finazon/api/route/description
    TechnicalIndicatorResponseAtr:
      type: object
      properties:
        atr:
          type: string
          description: The Average True Range indicator value
          example: "0.04550984493"
          x-go-name: Atr
        t:
          type: integer
          description: Timestamp of the trade in UNIX seconds
          format: int64
          example: 1696478400
          x-go-name: Timestamp
      example:
        t: 1696478400
        atr: "0.04550984493"
      x-go-package: gitlab.atlasgroup.ai/finazon/api/model/service/ti
    TechnicalIndicatorResponseBBands:
      type: object
      properties:
        lower_band:
          type: string
          description: BBands Lower value
          example: "71.71872558707"
          x-go-name: LowerBand
        middle_band:
          type: string
          description: BBands Middle value
          example: "161.31178571429"
          x-go-name: MiddleBand
        t:
          type: integer
          description: Timestamp of the trade in UNIX seconds
          format: int64
          example: 1696478400
          x-go-name: Timestamp
        upper_band:
          type: string
          description: BBands Upper value
          example: "250.90484584150"
          x-go-name: UpperBand
      example:
        t: 1696478400
        lower_band: "71.71872558707"
        upper_band: "250.90484584150"
        middle_band: "161.31178571429"
      x-go-package: gitlab.atlasgroup.ai/finazon/api/model/service/ti
    TechnicalIndicatorResponseData:
      title: TechnicalIndicatorResponseData represents oneOf response for the technical
        indicator data.
      type: object
      x-go-package: gitlab.atlasgroup.ai/finazon/api/route/description
    TechnicalIndicatorResponseIchimoku:
      type: object
      properties:
        chikou_span:
          type: string
          description: Lagging Span (chikou span) value
          example: "182.00250000000"
          x-go-name: ChikouSpan
        kijun_sen:
          type: string
          description: Base Line (kijun sen) value
          example: "94.99000000000"
          x-go-name: KijunSen
        senkou_span_a:
          type: string
          description: Leading Span A (senkou span A) value
          example: "183.00250000000"
          x-go-name: SenkouSpanA
        senkou_span_b:
          type: string
          description: Leading Span B (senkou span B) value
          example: "185.85500000000"
          x-go-name: SenkouSpanB
        t:
          type: integer
          description: Timestamp of the trade in UNIX seconds
          format: int64
          example: 1696478400
          x-go-name: Timestamp
        tenkan_sen:
          type: string
          description: Conversion Line (tenkan sen) value
          example: "87.72500000000"
          x-go-name: TenkanSen
      example:
        senkou_span_a: "183.00250000000"
        senkou_span_b: "185.85500000000"
        t: 1696478400
        tenkan_sen: "87.72500000000"
        chikou_span: "182.00250000000"
        kijun_sen: "94.99000000000"
      x-go-package: gitlab.atlasgroup.ai/finazon/api/model/service/ti
    TechnicalIndicatorResponseMa:
      type: object
      properties:
        ma:
          type: string
          description: Moving Average indicator value
          example: "161.31178571429"
          x-go-name: Ma
        t:
          type: integer
          description: Timestamp of the trade in UNIX seconds
          format: int64
          example: 1696478400
          x-go-name: Timestamp
      example:
        ma: "161.31178571429"
        t: 1696478400
      x-go-package: gitlab.atlasgroup.ai/finazon/api/model/service/ti
    TechnicalIndicatorResponseMacd:
      type: object
      properties:
        macd:
          type: string
          description: Moving Average Convergence/Divergence indicator value
          example: "-6.23433025226"
          x-go-name: Macd
        macd_hist:
          type: string
          description: MACD Histogram value
          example: "1.15495417720"
          x-go-name: MacdHist
        macd_signal:
          type: string
          description: MACD signal line value
          example: "-7.38928442946"
          x-go-name: MacdSignal
        t:
          type: integer
          description: Timestamp of the trade in UNIX seconds
          format: int64
          example: 1696478400
          x-go-name: Timestamp
      example:
        macd_hist: "1.15495417720"
        t: 1696478400
        macd: "-6.23433025226"
        macd_signal: "-7.38928442946"
      x-go-package: gitlab.atlasgroup.ai/finazon/api/model/service/ti
    TechnicalIndicatorResponseObv:
      type: object
      properties:
        obv:
          type: string
          description: On Balance Volume (OBV) indicator value
          example: "137453052.00000000000"
          x-go-name: Obv
        t:
          type: integer
          description: Timestamp of the trade in UNIX seconds
          format: int64
          example: 1696564800
          x-go-name: Timestamp
      example:
        obv: "137453052.00000000000"
        t: 1696564800
      x-go-package: gitlab.atlasgroup.ai/finazon/api/model/service/ti
    TechnicalIndicatorResponseRsi:
      type: object
      properties:
        rsi:
          type: string
          description: Relative Strength Index (RSI) indicator value
          example: "31.19105751584"
          x-go-name: Rsi
        t:
          type: integer
          description: Timestamp of the trade in UNIX seconds
          format: int64
          example: 1696564800
          x-go-name: Timestamp
      example:
        t: 1696564800
        rsi: "31.19105751584"
      x-go-package: gitlab.atlasgroup.ai/finazon/api/model/service/ti
    TechnicalIndicatorResponseSar:
      type: object
      properties:
        sar:
          type: string
          description: SAR indicator value
          example: "175.45000000000"
          x-go-name: Sar
        t:
          type: integer
          description: Timestamp of the trade in UNIX seconds
          format: int64
          example: 1696564800
          x-go-name: Timestamp
      example:
        t: 1696564800
        sar: "175.45000000000"
      x-go-package: gitlab.atlasgroup.ai/finazon/api/model/service/ti
    TechnicalIndicatorResponseStoch:
      type: object
      properties:
        slow_d:
          type: string
          description: Slow %D value
          example: "96.63967648887"
          x-go-name: SlowD
        slow_k:
          type: string
          description: Slow %K value
          example: "97.33715462311"
          x-go-name: SlowK
        t:
          type: integer
          description: Timestamp of the trade in UNIX seconds
          format: int64
          example: 1696478400
          x-go-name: Timestamp
      example:
        t: 1696478400
        slow_d: "96.63967648887"
        slow_k: "97.33715462311"
      x-go-package: gitlab.atlasgroup.ai/finazon/api/model/service/ti
    TickerSnapshotChange:
      type: object
      properties:
        dap:
          type: number
          description: Daily change price percent
          format: double
          example: 0.156
          x-go-name: DayChangePercent
          x-order: "10"
        wep:
          type: number
          description: Weekly change price percent
          format: double
          example: 0.243
          x-go-name: WeekChangePercent
          x-order: "20"
        mop:
          type: number
          description: Monthly change price percent
          format: double
          example: -0.034
          x-go-name: MonthChangePercent
          x-order: "30"
      description: TickerSnapshotChange quote changes
      example:
        dap: 0.156
        wep: 0.243
        mop: -0.034
      x-go-package: gitlab.atlasgroup.ai/finazon/api/model/entity
    TickerSnapshotLastDay:
      required:
      - c
      - h
      - l
      - o
      - v
      type: object
      properties:
        o:
          type: object
          description: Open
          example: "154.12"
          x-go-name: Open
          x-order: "10"
        h:
          type: object
          description: High
          example: "154.9"
          x-go-name: High
          x-order: "20"
        l:
          type: object
          description: Low
          example: "153.2"
          x-go-name: Low
          x-order: "30"
        c:
          type: object
          description: Close
          example: "154.55"
          x-go-name: Close
          x-order: "40"
        v:
          type: object
          description: Volume
          example: "65893054"
          x-go-name: Volume
          x-order: "50"
      description: TickerSnapshotLastDay last day quote
      example:
        c: "154.55"
        v: "65893054"
        h: "154.9"
        l: "153.2"
        o: "154.12"
      x-go-package: gitlab.atlasgroup.ai/finazon/api/model/entity
    TickerSnapshotLastFiftyTwoWeek:
      type: object
      properties:
        h:
          type: object
          description: Highest price
          example: "154.9"
          x-go-name: High
          x-order: "10"
        ht:
          type: integer
          description: Highest price timestamp
          format: int64
          example: 1679951555
          x-go-name: HighAt
          x-order: "20"
        l:
          type: object
          description: Lowest price
          example: "153.2"
          x-go-name: Low
          x-order: "30"
        lt:
          type: integer
          description: Lowest price timestamp
          format: int64
          example: 1679951555
          x-go-name: LowAt
          x-order: "30"
        ch:
          type: number
          description: Change price
          format: double
          example: 30.2
          x-go-name: Change
          x-order: "40"
        chp:
          type: number
          description: Change price percent
          format: double
          example: 0.23
          x-go-name: ChangePercent
          x-order: "50"
        av:
          type: integer
          description: Average volume
          format: int64
          example: 34853128
          x-go-name: AverageVolume
          x-order: "60"
      description: TickerSnapshotLastFiftyTwoWeek fifty-two week data
      example:
        ch: 30.2
        av: 34853128
        h: "154.9"
        lt: 1679951555
        chp: 0.23
        ht: 1679951555
        l: "153.2"
      x-go-package: gitlab.atlasgroup.ai/finazon/api/model/entity
    TickerSnapshotLastMonth:
      type: object
      properties:
        o:
          type: object
          description: Open
          example: "154.12"
          x-go-name: Open
          x-order: "10"
        h:
          type: object
          description: High
          example: "154.9"
          x-go-name: High
          x-order: "20"
        l:
          type: object
          description: Low
          example: "153.2"
          x-go-name: Low
          x-order: "30"
        c:
          type: object
          description: Close
          example: "154.55"
          x-go-name: Close
          x-order: "40"
        v:
          type: object
          description: Volume
          example: "65893054"
          x-go-name: Volume
          x-order: "50"
      description: TickerSnapshotLastMonth last month quote
      example:
        c: "154.55"
        v: "65893054"
        h: "154.9"
        l: "153.2"
        o: "154.12"
      x-go-package: gitlab.atlasgroup.ai/finazon/api/model/entity
    TickerSnapshotLastTrade:
      type: object
      properties:
        tm:
          type: integer
          description: Timestamp in millisencds
          format: int64
          example: 1687543759200
          x-go-name: EventAt
          x-order: "10"
        p:
          type: object
          description: core_entity.Price
          example: "154.75"
          x-go-name: Price
          x-order: "20"
        s:
          type: integer
          description: Shares
          format: int64
          example: 17
          x-go-name: Shares
          x-order: "30"
      description: TickerSnapshotLastTrade last trade
      example:
        p: "154.75"
        s: 17
        tm: 1687543759200
      x-go-package: gitlab.atlasgroup.ai/finazon/api/model/entity
    TickerSnapshotPreviousDay:
      type: object
      properties:
        o:
          type: object
          description: Open
          example: "154.12"
          x-go-name: Open
          x-order: "10"
        h:
          type: object
          description: High
          example: "154.9"
          x-go-name: High
          x-order: "20"
        l:
          type: object
          description: Low
          example: "153.2"
          x-go-name: Low
          x-order: "30"
        c:
          type: object
          description: Close
          example: "154.55"
          x-go-name: Close
          x-order: "40"
        v:
          type: object
          description: Volume
          example: "65893054"
          x-go-name: Volume
          x-order: "50"
      description: TickerSnapshotPreviousDay previous day quote
      example:
        c: "154.55"
        v: "65893054"
        h: "154.9"
        l: "153.2"
        o: "154.12"
      x-go-package: gitlab.atlasgroup.ai/finazon/api/model/entity
    TradesItem:
      type: object
      properties:
        p:
          type: number
          description: Price at which the trade occurred
          format: double
          example: 184.95
          x-go-name: P
        s:
          type: integer
          description: Number of shares traded
          format: int64
          example: 1
          x-go-name: S
        t:
          type: integer
          description: Timestamp of the trade in UNIX milliseconds
          format: int64
          example: 1686959999000
          x-go-name: T
      description: TradesItem represent the trade item
      example:
        p: 184.95
        s: 1
        t: 1686959999000
      x-go-package: gitlab.atlasgroup.ai/finazon/api/route/description
    inline_response_200:
      required:
      - 1d
      - 1m
      - 52w
      - ch
      - lt
      - p1d
      type: object
      properties:
        "1d":
          $ref: '#/components/schemas/TickerSnapshotLastDay'
        "1m":
          $ref: '#/components/schemas/TickerSnapshotLastMonth'
        "52w":
          $ref: '#/components/schemas/TickerSnapshotLastFiftyTwoWeek'
        ch:
          $ref: '#/components/schemas/TickerSnapshotChange'
        lt:
          $ref: '#/components/schemas/TickerSnapshotLastTrade'
        p1d:
          $ref: '#/components/schemas/TickerSnapshotPreviousDay'
      example:
        p1d:
          c: "154.55"
          v: "65893054"
          h: "154.9"
          l: "153.2"
          o: "154.12"
        "1d":
          c: "154.55"
          v: "65893054"
          h: "154.9"
          l: "153.2"
          o: "154.12"
        ch:
          dap: 0.156
          wep: 0.243
          mop: -0.034
        lt:
          p: "154.75"
          s: 17
          tm: 1687543759200
        "52w":
          ch: 30.2
          av: 34853128
          h: "154.9"
          lt: 1679951555
          chp: 0.23
          ht: 1679951555
          l: "153.2"
        "1m":
          c: "154.55"
          v: "65893054"
          h: "154.9"
          l: "153.2"
          o: "154.12"
    EarningsCalendarItem_eps:
      type: object
      properties:
        estimated:
          type: number
          description: EPS predicted
          format: double
          example: 1.43
          x-go-name: Estimated
        prior:
          type: number
          description: EPS reported for the same period a year ago
          format: double
          example: 1.52
          x-go-name: Prior
        reported:
          type: number
          description: EPS reported
          format: double
          example: 1.52
          x-go-name: Reported
        surprise:
          type: number
          description: Difference between the predicted and the actual reported value
          format: double
          example: 0.09
          x-go-name: Surprise
        surprise_percent:
          type: number
          description: Percentage difference between the predicted and the actual
            reported value
          format: double
          example: 0.0629
          x-go-name: SurprisePercent
        type:
          type: string
          description: Type of the earnings
          example: GAAP
          enum:
          - Adj
          - GAAP
          - FFO
          x-go-name: Type
      description: Earnings per share for the specified reporting period
      example:
        surprise: 0.09
        prior: 1.52
        estimated: 1.43
        reported: 1.52
        surprise_percent: 0.0629
        type: GAAP
    EarningsCalendarItem_revenue:
      type: object
      properties:
        estimated:
          type: number
          description: Revenue predicted
          format: double
          example: 92960000000
          x-go-name: Estimated
        prior:
          type: number
          description: Revenue reported for the same period a year ago
          format: double
          example: 97278000000
          x-go-name: Prior
        reported:
          type: number
          description: Revenue reported
          format: double
          example: 94836000000
          x-go-name: Reported
        surprise:
          type: number
          description: Difference between the predicted and the actual reported value
          format: double
          example: 1876000000
          x-go-name: Surprise
        surprise_percent:
          type: number
          description: Percentage difference between the predicted and the actual
            reported value
          format: double
          example: 0.0202
          x-go-name: SurprisePercent
        type:
          type: string
          description: Type of the revenue
          example: GAAP
          enum:
          - Adj
          - GAAP
          - FFO
          x-go-name: Type
      description: Revenue for the specified reporting period
      example:
        surprise: 1876000000
        prior: 97278000000
        estimated: 92960000000
        reported: 94836000000
        surprise_percent: 0.0202
        type: GAAP
  responses:
    ApiUsageResponse:
      description: ""
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ApiUsageResponseBody'
        application/xml:
          schema:
            $ref: '#/components/schemas/ApiUsageResponseBody'
    BenzingaDividendsCalendarResponse:
      description: ""
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/BenzingaDividendsCalendarResponseBody'
        application/xml:
          schema:
            $ref: '#/components/schemas/BenzingaDividendsCalendarResponseBody'
    BenzingaEarningsCalendarResponse:
      description: ""
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/BenzingaEarningsCalendarResponseBody'
        application/xml:
          schema:
            $ref: '#/components/schemas/BenzingaEarningsCalendarResponseBody'
    BenzingaIPOResponse:
      description: ""
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/BenzingaIPOResponseBody'
        application/xml:
          schema:
            $ref: '#/components/schemas/BenzingaIPOResponseBody'
    BenzingaNewsResponse:
      description: ""
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/BenzingaNewsResponseBody'
        application/xml:
          schema:
            $ref: '#/components/schemas/BenzingaNewsResponseBody'
    DatasetsResponse:
      description: ""
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/DatasetsResponseBody'
        application/xml:
          schema:
            $ref: '#/components/schemas/DatasetsResponseBody'
    ExchangesCryptoResponse:
      description: ""
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ExchangesCryptoResponseBody'
        application/xml:
          schema:
            $ref: '#/components/schemas/ExchangesCryptoResponseBody'
    ExchangesStocksResponse:
      description: ""
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ExchangesStocksResponseBody'
        application/xml:
          schema:
            $ref: '#/components/schemas/ExchangesStocksResponseBody'
    FilingsResponse:
      description: ""
      content:
        application/json:
          schema:
            type: array
            items:
              $ref: '#/components/schemas/Filing'
        application/xml:
          schema:
            type: array
            items:
              $ref: '#/components/schemas/Filing'
    MarketCenterResponse:
      description: ""
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/MarketCenterResponseBody'
        application/xml:
          schema:
            $ref: '#/components/schemas/MarketCenterResponseBody'
    MyDatasetsResponse:
      description: ""
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/DatasetsResponseBody'
        application/xml:
          schema:
            $ref: '#/components/schemas/DatasetsResponseBody'
    PriceResponse:
      description: ""
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PriceResponseBody'
        application/xml:
          schema:
            $ref: '#/components/schemas/PriceResponseBody'
    PublishersResponse:
      description: ""
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PublishersResponseBody'
        application/xml:
          schema:
            $ref: '#/components/schemas/PublishersResponseBody'
    QuotesBinanceResponse:
      description: ""
      content:
        application/json:
          schema:
            type: array
            items:
              $ref: '#/components/schemas/QuoteBinanceItem'
        application/xml:
          schema:
            type: array
            items:
              $ref: '#/components/schemas/QuoteBinanceItem'
    QuotesCryptoResponse:
      description: ""
      content:
        application/json:
          schema:
            type: array
            items:
              $ref: '#/components/schemas/QuoteItem'
        application/xml:
          schema:
            type: array
            items:
              $ref: '#/components/schemas/QuoteItem'
    QuotesForexResponse:
      description: ""
      content:
        application/json:
          schema:
            type: array
            items:
              $ref: '#/components/schemas/QuoteForexItem'
        application/xml:
          schema:
            type: array
            items:
              $ref: '#/components/schemas/QuoteForexItem'
    QuotesResponse:
      description: ""
      content:
        application/json:
          schema:
            type: array
            items:
              $ref: '#/components/schemas/QuoteItem'
        application/xml:
          schema:
            type: array
            items:
              $ref: '#/components/schemas/QuoteItem'
    SipTradesResponse:
      description: ""
      content:
        application/json:
          schema:
            type: array
            items:
              $ref: '#/components/schemas/SipTradesItem'
        application/xml:
          schema:
            type: array
            items:
              $ref: '#/components/schemas/SipTradesItem'
    SymbolsCryptoResponse:
      description: ""
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/SymbolsCryptoResponseBody'
        application/xml:
          schema:
            $ref: '#/components/schemas/SymbolsCryptoResponseBody'
    SymbolsForexResponse:
      description: ""
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/SymbolsForexResponseBody'
        application/xml:
          schema:
            $ref: '#/components/schemas/SymbolsForexResponseBody'
    SymbolsStocksResponse:
      description: ""
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/SymbolsStocksResponseBody'
        application/xml:
          schema:
            $ref: '#/components/schemas/SymbolsStocksResponseBody'
    SymbolsUSStocksResponse:
      description: ""
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/SymbolsUSStocksResponseBody'
        application/xml:
          schema:
            $ref: '#/components/schemas/SymbolsUSStocksResponseBody'
    TechnicalIndicatorResponse:
      description: ""
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/TechnicalIndicatorResponseData'
        application/xml:
          schema:
            $ref: '#/components/schemas/TechnicalIndicatorResponseData'
    TechnicalIndicatorResponseAtrReply:
      description: ""
      content:
        application/json:
          schema:
            type: array
            items:
              $ref: '#/components/schemas/TechnicalIndicatorResponseAtr'
        application/xml:
          schema:
            type: array
            items:
              $ref: '#/components/schemas/TechnicalIndicatorResponseAtr'
    TechnicalIndicatorResponseBBandsReply:
      description: ""
      content:
        application/json:
          schema:
            type: array
            items:
              $ref: '#/components/schemas/TechnicalIndicatorResponseBBands'
        application/xml:
          schema:
            type: array
            items:
              $ref: '#/components/schemas/TechnicalIndicatorResponseBBands'
    TechnicalIndicatorResponseIchimokuReply:
      description: ""
      content:
        application/json:
          schema:
            type: array
            items:
              $ref: '#/components/schemas/TechnicalIndicatorResponseIchimoku'
        application/xml:
          schema:
            type: array
            items:
              $ref: '#/components/schemas/TechnicalIndicatorResponseIchimoku'
    TechnicalIndicatorResponseMaReply:
      description: ""
      content:
        application/json:
          schema:
            type: array
            items:
              $ref: '#/components/schemas/TechnicalIndicatorResponseMa'
        application/xml:
          schema:
            type: array
            items:
              $ref: '#/components/schemas/TechnicalIndicatorResponseMa'
    TechnicalIndicatorResponseMacdReply:
      description: ""
      content:
        application/json:
          schema:
            type: array
            items:
              $ref: '#/components/schemas/TechnicalIndicatorResponseMacd'
        application/xml:
          schema:
            type: array
            items:
              $ref: '#/components/schemas/TechnicalIndicatorResponseMacd'
    TechnicalIndicatorResponseObvReply:
      description: ""
      content:
        application/json:
          schema:
            type: array
            items:
              $ref: '#/components/schemas/TechnicalIndicatorResponseObv'
        application/xml:
          schema:
            type: array
            items:
              $ref: '#/components/schemas/TechnicalIndicatorResponseObv'
    TechnicalIndicatorResponseRsiReply:
      description: ""
      content:
        application/json:
          schema:
            type: array
            items:
              $ref: '#/components/schemas/TechnicalIndicatorResponseRsi'
        application/xml:
          schema:
            type: array
            items:
              $ref: '#/components/schemas/TechnicalIndicatorResponseRsi'
    TechnicalIndicatorResponseSarReply:
      description: ""
      content:
        application/json:
          schema:
            type: array
            items:
              $ref: '#/components/schemas/TechnicalIndicatorResponseSar'
        application/xml:
          schema:
            type: array
            items:
              $ref: '#/components/schemas/TechnicalIndicatorResponseSar'
    TechnicalIndicatorResponseStochReply:
      description: ""
      content:
        application/json:
          schema:
            type: array
            items:
              $ref: '#/components/schemas/TechnicalIndicatorResponseStoch'
        application/xml:
          schema:
            type: array
            items:
              $ref: '#/components/schemas/TechnicalIndicatorResponseStoch'
    TickerSnapshotResponse:
      description: ""
      content:
        application/json:
          schema:
            required:
            - 1d
            - 1m
            - 52w
            - ch
            - lt
            - p1d
            type: object
            properties:
              "1d":
                $ref: '#/components/schemas/TickerSnapshotLastDay'
              "1m":
                $ref: '#/components/schemas/TickerSnapshotLastMonth'
              "52w":
                $ref: '#/components/schemas/TickerSnapshotLastFiftyTwoWeek'
              ch:
                $ref: '#/components/schemas/TickerSnapshotChange'
              lt:
                $ref: '#/components/schemas/TickerSnapshotLastTrade'
              p1d:
                $ref: '#/components/schemas/TickerSnapshotPreviousDay'
        application/xml:
          schema:
            required:
            - 1d
            - 1m
            - 52w
            - ch
            - lt
            - p1d
            type: object
            properties:
              "1d":
                $ref: '#/components/schemas/TickerSnapshotLastDay'
              "1m":
                $ref: '#/components/schemas/TickerSnapshotLastMonth'
              "52w":
                $ref: '#/components/schemas/TickerSnapshotLastFiftyTwoWeek'
              ch:
                $ref: '#/components/schemas/TickerSnapshotChange'
              lt:
                $ref: '#/components/schemas/TickerSnapshotLastTrade'
              p1d:
                $ref: '#/components/schemas/TickerSnapshotPreviousDay'
    TradesResponse:
      description: ""
      content:
        application/json:
          schema:
            type: array
            items:
              $ref: '#/components/schemas/TradesItem'
        application/xml:
          schema:
            type: array
            items:
              $ref: '#/components/schemas/TradesItem'
    statusResponse:
      description: A StatusResponse represent status of operation (ok or error).
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/BaseResponseBody'
        application/xml:
          schema:
            $ref: '#/components/schemas/BaseResponseBody'
  securitySchemes:
    api_key:
      type: apiKey
      name: apikey
      in: query
x-group-list:
  Benzinga:
    publisher: Benzinga
  Binance:
    publisher: Binance
  Dataset specific:
    description: Endpoints specific for particular dataset.
  SEC:
    publisher: SEC
  SIP:
    publisher: SIP
x-group-tree:
- - Reference data
  - - Markets
    - Tickers
- - Market data
  - - Technical indicators
- - Dataset specific
  - - Benzinga
    - Binance
    - Crypto
    - Forex
    - SEC
    - SIP
- Personal
x-groups-hidden:
- Technical indicators
x-original-swagger-version: "2.0"
